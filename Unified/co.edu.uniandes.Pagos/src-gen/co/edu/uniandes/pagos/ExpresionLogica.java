/**
 * generated by Xtext 2.10.0
 */
package co.edu.uniandes.pagos;

import org.eclipse.emf.ecore.EObject;

/**
 * <!-- begin-user-doc -->
 * A representation of the model object '<em><b>Expresion Logica</b></em>'.
 * <!-- end-user-doc -->
 *
 * <p>
 * The following features are supported:
 * </p>
 * <ul>
 *   <li>{@link co.edu.uniandes.pagos.ExpresionLogica#getVariable <em>Variable</em>}</li>
 *   <li>{@link co.edu.uniandes.pagos.ExpresionLogica#getLogOper <em>Log Oper</em>}</li>
 *   <li>{@link co.edu.uniandes.pagos.ExpresionLogica#getVariable2 <em>Variable2</em>}</li>
 *   <li>{@link co.edu.uniandes.pagos.ExpresionLogica#getLiteral <em>Literal</em>}</li>
 *   <li>{@link co.edu.uniandes.pagos.ExpresionLogica#getConOper <em>Con Oper</em>}</li>
 *   <li>{@link co.edu.uniandes.pagos.ExpresionLogica#getExp <em>Exp</em>}</li>
 * </ul>
 *
 * @see co.edu.uniandes.pagos.PagosPackage#getExpresionLogica()
 * @model
 * @generated
 */
public interface ExpresionLogica extends EObject
{
  /**
	 * Returns the value of the '<em><b>Variable</b></em>' containment reference.
	 * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Variable</em>' containment reference isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
	 * @return the value of the '<em>Variable</em>' containment reference.
	 * @see #setVariable(TerminalValue)
	 * @see co.edu.uniandes.pagos.PagosPackage#getExpresionLogica_Variable()
	 * @model containment="true"
	 * @generated
	 */
  TerminalValue getVariable();

  /**
	 * Sets the value of the '{@link co.edu.uniandes.pagos.ExpresionLogica#getVariable <em>Variable</em>}' containment reference.
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @param value the new value of the '<em>Variable</em>' containment reference.
	 * @see #getVariable()
	 * @generated
	 */
  void setVariable(TerminalValue value);

  /**
	 * Returns the value of the '<em><b>Log Oper</b></em>' attribute.
	 * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Log Oper</em>' attribute isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
	 * @return the value of the '<em>Log Oper</em>' attribute.
	 * @see #setLogOper(String)
	 * @see co.edu.uniandes.pagos.PagosPackage#getExpresionLogica_LogOper()
	 * @model
	 * @generated
	 */
  String getLogOper();

  /**
	 * Sets the value of the '{@link co.edu.uniandes.pagos.ExpresionLogica#getLogOper <em>Log Oper</em>}' attribute.
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @param value the new value of the '<em>Log Oper</em>' attribute.
	 * @see #getLogOper()
	 * @generated
	 */
  void setLogOper(String value);

  /**
	 * Returns the value of the '<em><b>Variable2</b></em>' containment reference.
	 * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Variable2</em>' containment reference isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
	 * @return the value of the '<em>Variable2</em>' containment reference.
	 * @see #setVariable2(TerminalValue)
	 * @see co.edu.uniandes.pagos.PagosPackage#getExpresionLogica_Variable2()
	 * @model containment="true"
	 * @generated
	 */
  TerminalValue getVariable2();

  /**
	 * Sets the value of the '{@link co.edu.uniandes.pagos.ExpresionLogica#getVariable2 <em>Variable2</em>}' containment reference.
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @param value the new value of the '<em>Variable2</em>' containment reference.
	 * @see #getVariable2()
	 * @generated
	 */
  void setVariable2(TerminalValue value);

  /**
	 * Returns the value of the '<em><b>Literal</b></em>' attribute.
	 * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Literal</em>' attribute isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
	 * @return the value of the '<em>Literal</em>' attribute.
	 * @see #setLiteral(String)
	 * @see co.edu.uniandes.pagos.PagosPackage#getExpresionLogica_Literal()
	 * @model
	 * @generated
	 */
  String getLiteral();

  /**
	 * Sets the value of the '{@link co.edu.uniandes.pagos.ExpresionLogica#getLiteral <em>Literal</em>}' attribute.
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @param value the new value of the '<em>Literal</em>' attribute.
	 * @see #getLiteral()
	 * @generated
	 */
  void setLiteral(String value);

  /**
	 * Returns the value of the '<em><b>Con Oper</b></em>' attribute.
	 * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Con Oper</em>' attribute isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
	 * @return the value of the '<em>Con Oper</em>' attribute.
	 * @see #setConOper(String)
	 * @see co.edu.uniandes.pagos.PagosPackage#getExpresionLogica_ConOper()
	 * @model
	 * @generated
	 */
  String getConOper();

  /**
	 * Sets the value of the '{@link co.edu.uniandes.pagos.ExpresionLogica#getConOper <em>Con Oper</em>}' attribute.
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @param value the new value of the '<em>Con Oper</em>' attribute.
	 * @see #getConOper()
	 * @generated
	 */
  void setConOper(String value);

  /**
	 * Returns the value of the '<em><b>Exp</b></em>' containment reference.
	 * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Exp</em>' containment reference isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
	 * @return the value of the '<em>Exp</em>' containment reference.
	 * @see #setExp(ExpresionLogica)
	 * @see co.edu.uniandes.pagos.PagosPackage#getExpresionLogica_Exp()
	 * @model containment="true"
	 * @generated
	 */
  ExpresionLogica getExp();

  /**
	 * Sets the value of the '{@link co.edu.uniandes.pagos.ExpresionLogica#getExp <em>Exp</em>}' containment reference.
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @param value the new value of the '<em>Exp</em>' containment reference.
	 * @see #getExp()
	 * @generated
	 */
  void setExp(ExpresionLogica value);

} // ExpresionLogica
