/**
 * generated by Xtext 2.10.0
 */
package co.edu.uniandes.pagos.provider;

import co.edu.uniandes.pagos.util.PagosAdapterFactory;

import java.util.ArrayList;
import java.util.Collection;

import org.eclipse.emf.common.notify.Adapter;
import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.Notifier;

import org.eclipse.emf.edit.provider.ChangeNotifier;
import org.eclipse.emf.edit.provider.ComposeableAdapterFactory;
import org.eclipse.emf.edit.provider.ComposedAdapterFactory;
import org.eclipse.emf.edit.provider.IChangeNotifier;
import org.eclipse.emf.edit.provider.IDisposable;
import org.eclipse.emf.edit.provider.IEditingDomainItemProvider;
import org.eclipse.emf.edit.provider.IItemLabelProvider;
import org.eclipse.emf.edit.provider.IItemPropertySource;
import org.eclipse.emf.edit.provider.INotifyChangedListener;
import org.eclipse.emf.edit.provider.IStructuredItemContentProvider;
import org.eclipse.emf.edit.provider.ITreeItemContentProvider;

/**
 * This is the factory that is used to provide the interfaces needed to support Viewers.
 * The adapters generated by this factory convert EMF adapter notifications into calls to {@link #fireNotifyChanged fireNotifyChanged}.
 * The adapters also support Eclipse property sheets.
 * Note that most of the adapters are shared among multiple instances.
 * <!-- begin-user-doc -->
 * <!-- end-user-doc -->
 * @generated
 */
public class PagosItemProviderAdapterFactory extends PagosAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
	/**
	 * This keeps track of the root adapter factory that delegates to this adapter factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ComposedAdapterFactory parentAdapterFactory;

	/**
	 * This is used to implement {@link org.eclipse.emf.edit.provider.IChangeNotifier}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IChangeNotifier changeNotifier = new ChangeNotifier();

	/**
	 * This keeps track of all the supported types checked by {@link #isFactoryForType isFactoryForType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Collection<Object> supportedTypes = new ArrayList<Object>();

	/**
	 * This constructs an instance.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public PagosItemProviderAdapterFactory() {
		supportedTypes.add(IEditingDomainItemProvider.class);
		supportedTypes.add(IStructuredItemContentProvider.class);
		supportedTypes.add(ITreeItemContentProvider.class);
		supportedTypes.add(IItemLabelProvider.class);
		supportedTypes.add(IItemPropertySource.class);
	}

	/**
	 * This keeps track of the one adapter used for all {@link co.edu.uniandes.pagos.Application} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ApplicationItemProvider applicationItemProvider;

	/**
	 * This creates an adapter for a {@link co.edu.uniandes.pagos.Application}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createApplicationAdapter() {
		if (applicationItemProvider == null) {
			applicationItemProvider = new ApplicationItemProvider(this);
		}

		return applicationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link co.edu.uniandes.pagos.Intermediary} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IntermediaryItemProvider intermediaryItemProvider;

	/**
	 * This creates an adapter for a {@link co.edu.uniandes.pagos.Intermediary}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createIntermediaryAdapter() {
		if (intermediaryItemProvider == null) {
			intermediaryItemProvider = new IntermediaryItemProvider(this);
		}

		return intermediaryItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link co.edu.uniandes.pagos.SuperEntity} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SuperEntityItemProvider superEntityItemProvider;

	/**
	 * This creates an adapter for a {@link co.edu.uniandes.pagos.SuperEntity}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSuperEntityAdapter() {
		if (superEntityItemProvider == null) {
			superEntityItemProvider = new SuperEntityItemProvider(this);
		}

		return superEntityItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link co.edu.uniandes.pagos.Participant} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ParticipantItemProvider participantItemProvider;

	/**
	 * This creates an adapter for a {@link co.edu.uniandes.pagos.Participant}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createParticipantAdapter() {
		if (participantItemProvider == null) {
			participantItemProvider = new ParticipantItemProvider(this);
		}

		return participantItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link co.edu.uniandes.pagos.Provider} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ProviderItemProvider providerItemProvider;

	/**
	 * This creates an adapter for a {@link co.edu.uniandes.pagos.Provider}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createProviderAdapter() {
		if (providerItemProvider == null) {
			providerItemProvider = new ProviderItemProvider(this);
		}

		return providerItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link co.edu.uniandes.pagos.InformationTemplate} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected InformationTemplateItemProvider informationTemplateItemProvider;

	/**
	 * This creates an adapter for a {@link co.edu.uniandes.pagos.InformationTemplate}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createInformationTemplateAdapter() {
		if (informationTemplateItemProvider == null) {
			informationTemplateItemProvider = new InformationTemplateItemProvider(this);
		}

		return informationTemplateItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link co.edu.uniandes.pagos.CalculationTemplate} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CalculationTemplateItemProvider calculationTemplateItemProvider;

	/**
	 * This creates an adapter for a {@link co.edu.uniandes.pagos.CalculationTemplate}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCalculationTemplateAdapter() {
		if (calculationTemplateItemProvider == null) {
			calculationTemplateItemProvider = new CalculationTemplateItemProvider(this);
		}

		return calculationTemplateItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link co.edu.uniandes.pagos.Formula} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected FormulaItemProvider formulaItemProvider;

	/**
	 * This creates an adapter for a {@link co.edu.uniandes.pagos.Formula}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createFormulaAdapter() {
		if (formulaItemProvider == null) {
			formulaItemProvider = new FormulaItemProvider(this);
		}

		return formulaItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link co.edu.uniandes.pagos.IfBlock} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IfBlockItemProvider ifBlockItemProvider;

	/**
	 * This creates an adapter for a {@link co.edu.uniandes.pagos.IfBlock}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createIfBlockAdapter() {
		if (ifBlockItemProvider == null) {
			ifBlockItemProvider = new IfBlockItemProvider(this);
		}

		return ifBlockItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link co.edu.uniandes.pagos.IfCondition} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IfConditionItemProvider ifConditionItemProvider;

	/**
	 * This creates an adapter for a {@link co.edu.uniandes.pagos.IfCondition}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createIfConditionAdapter() {
		if (ifConditionItemProvider == null) {
			ifConditionItemProvider = new IfConditionItemProvider(this);
		}

		return ifConditionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link co.edu.uniandes.pagos.ElseSegment} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ElseSegmentItemProvider elseSegmentItemProvider;

	/**
	 * This creates an adapter for a {@link co.edu.uniandes.pagos.ElseSegment}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createElseSegmentAdapter() {
		if (elseSegmentItemProvider == null) {
			elseSegmentItemProvider = new ElseSegmentItemProvider(this);
		}

		return elseSegmentItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link co.edu.uniandes.pagos.ReturnBlock} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ReturnBlockItemProvider returnBlockItemProvider;

	/**
	 * This creates an adapter for a {@link co.edu.uniandes.pagos.ReturnBlock}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createReturnBlockAdapter() {
		if (returnBlockItemProvider == null) {
			returnBlockItemProvider = new ReturnBlockItemProvider(this);
		}

		return returnBlockItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link co.edu.uniandes.pagos.ExpresionLogica} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ExpresionLogicaItemProvider expresionLogicaItemProvider;

	/**
	 * This creates an adapter for a {@link co.edu.uniandes.pagos.ExpresionLogica}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createExpresionLogicaAdapter() {
		if (expresionLogicaItemProvider == null) {
			expresionLogicaItemProvider = new ExpresionLogicaItemProvider(this);
		}

		return expresionLogicaItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link co.edu.uniandes.pagos.Expression} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ExpressionItemProvider expressionItemProvider;

	/**
	 * This creates an adapter for a {@link co.edu.uniandes.pagos.Expression}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createExpressionAdapter() {
		if (expressionItemProvider == null) {
			expressionItemProvider = new ExpressionItemProvider(this);
		}

		return expressionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link co.edu.uniandes.pagos.BusinessAttribute} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BusinessAttributeItemProvider businessAttributeItemProvider;

	/**
	 * This creates an adapter for a {@link co.edu.uniandes.pagos.BusinessAttribute}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBusinessAttributeAdapter() {
		if (businessAttributeItemProvider == null) {
			businessAttributeItemProvider = new BusinessAttributeItemProvider(this);
		}

		return businessAttributeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link co.edu.uniandes.pagos.TerminalValue} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TerminalValueItemProvider terminalValueItemProvider;

	/**
	 * This creates an adapter for a {@link co.edu.uniandes.pagos.TerminalValue}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTerminalValueAdapter() {
		if (terminalValueItemProvider == null) {
			terminalValueItemProvider = new TerminalValueItemProvider(this);
		}

		return terminalValueItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link co.edu.uniandes.pagos.Adicion} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AdicionItemProvider adicionItemProvider;

	/**
	 * This creates an adapter for a {@link co.edu.uniandes.pagos.Adicion}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAdicionAdapter() {
		if (adicionItemProvider == null) {
			adicionItemProvider = new AdicionItemProvider(this);
		}

		return adicionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link co.edu.uniandes.pagos.Multiplicacion} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MultiplicacionItemProvider multiplicacionItemProvider;

	/**
	 * This creates an adapter for a {@link co.edu.uniandes.pagos.Multiplicacion}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMultiplicacionAdapter() {
		if (multiplicacionItemProvider == null) {
			multiplicacionItemProvider = new MultiplicacionItemProvider(this);
		}

		return multiplicacionItemProvider;
	}

	/**
	 * This returns the root adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public ComposeableAdapterFactory getRootAdapterFactory() {
		return parentAdapterFactory == null ? this : parentAdapterFactory.getRootAdapterFactory();
	}

	/**
	 * This sets the composed adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void setParentAdapterFactory(ComposedAdapterFactory parentAdapterFactory) {
		this.parentAdapterFactory = parentAdapterFactory;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public boolean isFactoryForType(Object type) {
		return supportedTypes.contains(type) || super.isFactoryForType(type);
	}

	/**
	 * This implementation substitutes the factory itself as the key for the adapter.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter adapt(Notifier notifier, Object type) {
		return super.adapt(notifier, this);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Object adapt(Object object, Object type) {
		if (isFactoryForType(type)) {
			Object adapter = super.adapt(object, type);
			if (!(type instanceof Class<?>) || (((Class<?>)type).isInstance(adapter))) {
				return adapter;
			}
		}

		return null;
	}

	/**
	 * This adds a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void addListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.addListener(notifyChangedListener);
	}

	/**
	 * This removes a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void removeListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.removeListener(notifyChangedListener);
	}

	/**
	 * This delegates to {@link #changeNotifier} and to {@link #parentAdapterFactory}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void fireNotifyChanged(Notification notification) {
		changeNotifier.fireNotifyChanged(notification);

		if (parentAdapterFactory != null) {
			parentAdapterFactory.fireNotifyChanged(notification);
		}
	}

	/**
	 * This disposes all of the item providers created by this factory. 
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void dispose() {
		if (applicationItemProvider != null) applicationItemProvider.dispose();
		if (intermediaryItemProvider != null) intermediaryItemProvider.dispose();
		if (superEntityItemProvider != null) superEntityItemProvider.dispose();
		if (participantItemProvider != null) participantItemProvider.dispose();
		if (providerItemProvider != null) providerItemProvider.dispose();
		if (informationTemplateItemProvider != null) informationTemplateItemProvider.dispose();
		if (calculationTemplateItemProvider != null) calculationTemplateItemProvider.dispose();
		if (formulaItemProvider != null) formulaItemProvider.dispose();
		if (ifBlockItemProvider != null) ifBlockItemProvider.dispose();
		if (ifConditionItemProvider != null) ifConditionItemProvider.dispose();
		if (elseSegmentItemProvider != null) elseSegmentItemProvider.dispose();
		if (returnBlockItemProvider != null) returnBlockItemProvider.dispose();
		if (expresionLogicaItemProvider != null) expresionLogicaItemProvider.dispose();
		if (expressionItemProvider != null) expressionItemProvider.dispose();
		if (businessAttributeItemProvider != null) businessAttributeItemProvider.dispose();
		if (terminalValueItemProvider != null) terminalValueItemProvider.dispose();
		if (adicionItemProvider != null) adicionItemProvider.dispose();
		if (multiplicacionItemProvider != null) multiplicacionItemProvider.dispose();
	}

}
