package co.edu.uniandes.db;
import java.sql.*;
import java.util.Properties;
public class DBUtil {
/**
  Plantilla para hacer la insersion de datos
**/





	 public static void main (String[] args) { 
        try {
            String url = "jdbc:postgresql://localhost:5432/pila?useUnicode=true&characterEncoding=UTF-8";
            Connection conn; //= DriverManager.getConnection(url,"postgres","root");

            Properties props = new Properties();
            props.setProperty("user","postgres");
            props.setProperty("password","root");
            conn = DriverManager.getConnection(url, props);

            Statement st = conn.createStatement();
            st.executeUpdate("insert into userpayments (user_id, email, password, userid, username, rol) values (1, 'pagos@deuna.com', null, 'M00UYKY5EReZlnhzsHeEWG0Mhpn1', 'PagosAdmin', 'Intermediary')");
            st.executeUpdate("insert into userintermediary values (1)");

            //Estos son los datos de los parametros
            //ActividadEconomica
            st.executeUpdate("insert into ActividadEconomica (id, codigo, descripcion) values(1,'8022','Establecimientos de educación media')");
            st.executeUpdate("insert into ActividadEconomica (id, codigo, descripcion) values(2,'8513','Empresas dedicadas a practicas de odontologia')");
            st.executeUpdate("insert into ActividadEconomica (id, codigo, descripcion) values(3,'0117','Empresas dedicadas a la producción especializada de frutas, nueces, plantas bebestibles, y especias. Incluye el tostado y beneficio del cacao')");
            st.executeUpdate("insert into ActividadEconomica (id, codigo, descripcion) values(4,'1541','Empresa dedicada a la elaboracion de productos de molineria, de almidones,productos derivados del almidon y alimentos preparados para animales. Incluye el tostado de semillas y granos')");
            st.executeUpdate("insert into ActividadEconomica (id, codigo, descripcion) values(5,'1592','Empresa dedicada a la elaboracion de bebidas fermentadas no destiladas')");
            st.executeUpdate("insert into ActividadEconomica (id, codigo, descripcion) values(6,'1743','Empresa dedicada a la fabricación de cuerdas, cordeles, cables, bramantes y redes')");
            st.executeUpdate("insert into ActividadEconomica (id, codigo, descripcion) values(7,'2101', 'Empresa dedicada a la fabricación de papel, carton, y productos de papel y carton')");
            st.executeUpdate("insert into ActividadEconomica (id, codigo, descripcion) values(8,'2322', 'Empresa dedicada a la fabricación de productos derivados del petroleo, fuera de refineria como asfalto')");
            st.executeUpdate("insert into ActividadEconomica (id, codigo, descripcion) values(9,'1431', 'Extraccion de esmeraldas')");
            st.executeUpdate("insert into ActividadEconomica (id, codigo, descripcion) values(10,'2321','Fabricacion de productos de la refinación del petroleo, elaborados en refineria')");

	        [% var hashRows: new Map;%]
	        [% for(p in BusinessAttributeCollection.all){%]
			//Inserts tabla  [%=p.name%];			    
				[% var insertIndex = 0;%]			
				[% for(q in p.businessAttributes){%]
				    [% insertIndex += 1;%]
					st.executeUpdate("insert into [%=q.Type%] (id, codigo, descripcion) values([%=insertIndex%],'[%=insertIndex%]','[%=q.name%]");	
					[% hashRows.put(q, insertIndex);%]
				[%}%]			
					
			[%}%]


            st.executeUpdate("commit");
           
          pensionadopagador 
          [% var pensionadopagadorIndex = 0;%]
          [% var pensionpagadorIndex = 0;%]
          [% var pensionpensionadoIndex = 0;%] 
     	  [% for(p in BusinessAttributeCollection.all){%]			
				[% var mainIndex = 0;%]
				[% for(q in p.businessAttributes){%]
				  [% mainIndex += 1;%]
				  [% var secondIndex = 0;%]
			      [% for(r in q.relations){%]			      					      		
			       		/**  
			       		 * [%=q.Type%] vs [%=r.Type%]
			       		 * id: [%=hashRows.get(q)%]  --  id: [%=hashRows.get(r)%]       				       		
			       		 * [%=q.name%]   --   [%=r.name%]	
			       		 */			       				       		
			       		[%if(q.Type =='TipoPensionado'  and r.Type =='TipoPagador'){%]
			       		 [% pensionadopagadorIndex += 1;%]
			       		 st.executeUpdate("insert into validacionpensionadopagador (id, pensionado_id, pagador_id) values([%=pensionadopagadorIndex%],[%=hashRows.get(q)%],[%=hashRows.get(r)%])");
			       		[%}%]			       		
			       		[%if(q.Type =='TipoPension'  and r.Type =='TipoPagador'){%]
			       		 [% pensionpagadorIndex += 1;%]
			       		 st.executeUpdate("insert into validacionpensionpagador (id, pensionado_id, pagador_id) values([%=pensionpagadorIndex%],[%=hashRows.get(q)%],[%=hashRows.get(r)%])");
			       		[%}%]			       		
			       		[%if(q.Type =='TipoPension'  and r.Type =='TipoPensionado'){%]
			       		 [% pensionpensionadoIndex += 1;%]
			       		 st.executeUpdate("insert into validacionpensionpensionado (id, pensionado_id, pagador_id) values([%=pensionpensionadoIndex%],[%=hashRows.get(q)%],[%=hashRows.get(r)%])");
			       		[%}%]			       					
				  [%}%]				
				[%}%]		
			[%}%]            

	        System.out.println("Insersion finalizada");
	        st.executeUpdate("commit");

	            conn.close(); 
	        } catch (Exception e) { 
	            System.err.println("Got an exception! "); 
	            System.err.println(e.getMessage()); 
	            System.err.println(e.getCause()); 
	        } 
	  
	    }

}

