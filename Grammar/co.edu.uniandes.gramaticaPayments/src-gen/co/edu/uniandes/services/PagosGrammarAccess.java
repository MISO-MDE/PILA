/*
 * generated by Xtext 2.10.0
 */
package co.edu.uniandes.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Action;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.CrossReference;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder.AbstractGrammarElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class PagosGrammarAccess extends AbstractGrammarElementFinder {
	
	public class ApplicationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "co.edu.uniandes.Pagos.Application");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cLBRACETerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cNameKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cCOLONTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cNameIDTerminalRuleCall_3_0 = (RuleCall)cNameAssignment_3.eContents().get(0);
		private final RuleCall cCOMMATerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final Keyword cIntermediaryKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final RuleCall cCOLONTerminalRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		private final Assignment cIntermediaryAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cIntermediaryIntermediaryParserRuleCall_7_0 = (RuleCall)cIntermediaryAssignment_7.eContents().get(0);
		private final RuleCall cRBRACETerminalRuleCall_8 = (RuleCall)cGroup.eContents().get(8);
		
		//Application:
		//	LBRACE
		//	'name' COLON name=ID
		//	COMMA
		//	'intermediary' COLON intermediary=Intermediary
		//	RBRACE;
		@Override public ParserRule getRule() { return rule; }
		
		//LBRACE 'name' COLON name=ID COMMA 'intermediary' COLON intermediary=Intermediary RBRACE
		public Group getGroup() { return cGroup; }
		
		//LBRACE
		public RuleCall getLBRACETerminalRuleCall_0() { return cLBRACETerminalRuleCall_0; }
		
		//'name'
		public Keyword getNameKeyword_1() { return cNameKeyword_1; }
		
		//COLON
		public RuleCall getCOLONTerminalRuleCall_2() { return cCOLONTerminalRuleCall_2; }
		
		//name=ID
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_3_0() { return cNameIDTerminalRuleCall_3_0; }
		
		//COMMA
		public RuleCall getCOMMATerminalRuleCall_4() { return cCOMMATerminalRuleCall_4; }
		
		//'intermediary'
		public Keyword getIntermediaryKeyword_5() { return cIntermediaryKeyword_5; }
		
		//COLON
		public RuleCall getCOLONTerminalRuleCall_6() { return cCOLONTerminalRuleCall_6; }
		
		//intermediary=Intermediary
		public Assignment getIntermediaryAssignment_7() { return cIntermediaryAssignment_7; }
		
		//Intermediary
		public RuleCall getIntermediaryIntermediaryParserRuleCall_7_0() { return cIntermediaryIntermediaryParserRuleCall_7_0; }
		
		//RBRACE
		public RuleCall getRBRACETerminalRuleCall_8() { return cRBRACETerminalRuleCall_8; }
	}
	public class IntermediaryElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "co.edu.uniandes.Pagos.Intermediary");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cIntermediaryAction_0 = (Action)cGroup.eContents().get(0);
		private final RuleCall cLBRACETerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Keyword cNameKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final RuleCall cCOLONTerminalRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final Assignment cNameAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cNameIDTerminalRuleCall_4_0 = (RuleCall)cNameAssignment_4.eContents().get(0);
		private final RuleCall cCOMMATerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final Keyword cSuperentitiesKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final RuleCall cCOLONTerminalRuleCall_7 = (RuleCall)cGroup.eContents().get(7);
		private final RuleCall cLBRACKETTerminalRuleCall_8 = (RuleCall)cGroup.eContents().get(8);
		private final Assignment cSuperentitieAssignment_9 = (Assignment)cGroup.eContents().get(9);
		private final RuleCall cSuperentitieSuperEntityParserRuleCall_9_0 = (RuleCall)cSuperentitieAssignment_9.eContents().get(0);
		private final Group cGroup_10 = (Group)cGroup.eContents().get(10);
		private final RuleCall cCOMMATerminalRuleCall_10_0 = (RuleCall)cGroup_10.eContents().get(0);
		private final Assignment cSuperentitieAssignment_10_1 = (Assignment)cGroup_10.eContents().get(1);
		private final RuleCall cSuperentitieSuperEntityParserRuleCall_10_1_0 = (RuleCall)cSuperentitieAssignment_10_1.eContents().get(0);
		private final RuleCall cRBRACKETTerminalRuleCall_11 = (RuleCall)cGroup.eContents().get(11);
		private final RuleCall cRBRACETerminalRuleCall_12 = (RuleCall)cGroup.eContents().get(12);
		
		//Intermediary:
		//	{Intermediary} LBRACE
		//	'name' COLON name=ID
		//	COMMA
		//	'superentities' COLON LBRACKET superentitie+=SuperEntity (COMMA superentitie+=SuperEntity)* RBRACKET
		//	RBRACE;
		@Override public ParserRule getRule() { return rule; }
		
		//{Intermediary} LBRACE 'name' COLON name=ID COMMA 'superentities' COLON LBRACKET superentitie+=SuperEntity (COMMA
		//superentitie+=SuperEntity)* RBRACKET RBRACE
		public Group getGroup() { return cGroup; }
		
		//{Intermediary}
		public Action getIntermediaryAction_0() { return cIntermediaryAction_0; }
		
		//LBRACE
		public RuleCall getLBRACETerminalRuleCall_1() { return cLBRACETerminalRuleCall_1; }
		
		//'name'
		public Keyword getNameKeyword_2() { return cNameKeyword_2; }
		
		//COLON
		public RuleCall getCOLONTerminalRuleCall_3() { return cCOLONTerminalRuleCall_3; }
		
		//name=ID
		public Assignment getNameAssignment_4() { return cNameAssignment_4; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_4_0() { return cNameIDTerminalRuleCall_4_0; }
		
		//COMMA
		public RuleCall getCOMMATerminalRuleCall_5() { return cCOMMATerminalRuleCall_5; }
		
		//'superentities'
		public Keyword getSuperentitiesKeyword_6() { return cSuperentitiesKeyword_6; }
		
		//COLON
		public RuleCall getCOLONTerminalRuleCall_7() { return cCOLONTerminalRuleCall_7; }
		
		//LBRACKET
		public RuleCall getLBRACKETTerminalRuleCall_8() { return cLBRACKETTerminalRuleCall_8; }
		
		//superentitie+=SuperEntity
		public Assignment getSuperentitieAssignment_9() { return cSuperentitieAssignment_9; }
		
		//SuperEntity
		public RuleCall getSuperentitieSuperEntityParserRuleCall_9_0() { return cSuperentitieSuperEntityParserRuleCall_9_0; }
		
		//(COMMA superentitie+=SuperEntity)*
		public Group getGroup_10() { return cGroup_10; }
		
		//COMMA
		public RuleCall getCOMMATerminalRuleCall_10_0() { return cCOMMATerminalRuleCall_10_0; }
		
		//superentitie+=SuperEntity
		public Assignment getSuperentitieAssignment_10_1() { return cSuperentitieAssignment_10_1; }
		
		//SuperEntity
		public RuleCall getSuperentitieSuperEntityParserRuleCall_10_1_0() { return cSuperentitieSuperEntityParserRuleCall_10_1_0; }
		
		//RBRACKET
		public RuleCall getRBRACKETTerminalRuleCall_11() { return cRBRACKETTerminalRuleCall_11; }
		
		//RBRACE
		public RuleCall getRBRACETerminalRuleCall_12() { return cRBRACETerminalRuleCall_12; }
	}
	public class SuperEntityElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "co.edu.uniandes.Pagos.SuperEntity");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cSuperEntityAction_0 = (Action)cGroup.eContents().get(0);
		private final RuleCall cLBRACETerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Keyword cNameKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final RuleCall cCOLONTerminalRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final Assignment cNameAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cNameIDTerminalRuleCall_4_0 = (RuleCall)cNameAssignment_4.eContents().get(0);
		private final RuleCall cCOMMATerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final Keyword cDescriptionKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final RuleCall cCOLONTerminalRuleCall_7 = (RuleCall)cGroup.eContents().get(7);
		private final Assignment cDescriptionAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cDescriptionSTRINGTerminalRuleCall_8_0 = (RuleCall)cDescriptionAssignment_8.eContents().get(0);
		private final RuleCall cCOMMATerminalRuleCall_9 = (RuleCall)cGroup.eContents().get(9);
		private final Keyword cAttributesKeyword_10 = (Keyword)cGroup.eContents().get(10);
		private final RuleCall cCOLONTerminalRuleCall_11 = (RuleCall)cGroup.eContents().get(11);
		private final RuleCall cLBRACKETTerminalRuleCall_12 = (RuleCall)cGroup.eContents().get(12);
		private final Assignment cAttListsAssignment_13 = (Assignment)cGroup.eContents().get(13);
		private final RuleCall cAttListsSuperEntityAttributeParserRuleCall_13_0 = (RuleCall)cAttListsAssignment_13.eContents().get(0);
		private final Group cGroup_14 = (Group)cGroup.eContents().get(14);
		private final RuleCall cCOMMATerminalRuleCall_14_0 = (RuleCall)cGroup_14.eContents().get(0);
		private final Assignment cAttListsAssignment_14_1 = (Assignment)cGroup_14.eContents().get(1);
		private final RuleCall cAttListsSuperEntityAttributeParserRuleCall_14_1_0 = (RuleCall)cAttListsAssignment_14_1.eContents().get(0);
		private final RuleCall cRBRACKETTerminalRuleCall_15 = (RuleCall)cGroup.eContents().get(15);
		private final RuleCall cCOMMATerminalRuleCall_16 = (RuleCall)cGroup.eContents().get(16);
		private final Keyword cEntitiesKeyword_17 = (Keyword)cGroup.eContents().get(17);
		private final RuleCall cCOLONTerminalRuleCall_18 = (RuleCall)cGroup.eContents().get(18);
		private final RuleCall cLBRACKETTerminalRuleCall_19 = (RuleCall)cGroup.eContents().get(19);
		private final Assignment cParticipanteAssignment_20 = (Assignment)cGroup.eContents().get(20);
		private final RuleCall cParticipanteParticipantParserRuleCall_20_0 = (RuleCall)cParticipanteAssignment_20.eContents().get(0);
		private final Group cGroup_21 = (Group)cGroup.eContents().get(21);
		private final RuleCall cCOMMATerminalRuleCall_21_0 = (RuleCall)cGroup_21.eContents().get(0);
		private final Assignment cParticipanteAssignment_21_1 = (Assignment)cGroup_21.eContents().get(1);
		private final RuleCall cParticipanteParticipantParserRuleCall_21_1_0 = (RuleCall)cParticipanteAssignment_21_1.eContents().get(0);
		private final RuleCall cRBRACKETTerminalRuleCall_22 = (RuleCall)cGroup.eContents().get(22);
		private final RuleCall cRBRACETerminalRuleCall_23 = (RuleCall)cGroup.eContents().get(23);
		
		//SuperEntity:
		//	{SuperEntity} LBRACE
		//	'name' COLON name=ID
		//	COMMA
		//	'description' COLON description=STRING
		//	COMMA
		//	'attributes' COLON
		//	LBRACKET attLists+=SuperEntityAttribute (COMMA attLists+=SuperEntityAttribute)* RBRACKET
		//	COMMA
		//	'entities' COLON LBRACKET participante+=Participant (COMMA participante+=Participant)* RBRACKET
		//	RBRACE;
		@Override public ParserRule getRule() { return rule; }
		
		//{SuperEntity} LBRACE 'name' COLON name=ID COMMA 'description' COLON description=STRING COMMA 'attributes' COLON LBRACKET
		//attLists+=SuperEntityAttribute (COMMA attLists+=SuperEntityAttribute)* RBRACKET COMMA 'entities' COLON LBRACKET
		//participante+=Participant (COMMA participante+=Participant)* RBRACKET RBRACE
		public Group getGroup() { return cGroup; }
		
		//{SuperEntity}
		public Action getSuperEntityAction_0() { return cSuperEntityAction_0; }
		
		//LBRACE
		public RuleCall getLBRACETerminalRuleCall_1() { return cLBRACETerminalRuleCall_1; }
		
		//'name'
		public Keyword getNameKeyword_2() { return cNameKeyword_2; }
		
		//COLON
		public RuleCall getCOLONTerminalRuleCall_3() { return cCOLONTerminalRuleCall_3; }
		
		//name=ID
		public Assignment getNameAssignment_4() { return cNameAssignment_4; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_4_0() { return cNameIDTerminalRuleCall_4_0; }
		
		//COMMA
		public RuleCall getCOMMATerminalRuleCall_5() { return cCOMMATerminalRuleCall_5; }
		
		//'description'
		public Keyword getDescriptionKeyword_6() { return cDescriptionKeyword_6; }
		
		//COLON
		public RuleCall getCOLONTerminalRuleCall_7() { return cCOLONTerminalRuleCall_7; }
		
		//description=STRING
		public Assignment getDescriptionAssignment_8() { return cDescriptionAssignment_8; }
		
		//STRING
		public RuleCall getDescriptionSTRINGTerminalRuleCall_8_0() { return cDescriptionSTRINGTerminalRuleCall_8_0; }
		
		//COMMA
		public RuleCall getCOMMATerminalRuleCall_9() { return cCOMMATerminalRuleCall_9; }
		
		//'attributes'
		public Keyword getAttributesKeyword_10() { return cAttributesKeyword_10; }
		
		//COLON
		public RuleCall getCOLONTerminalRuleCall_11() { return cCOLONTerminalRuleCall_11; }
		
		//LBRACKET
		public RuleCall getLBRACKETTerminalRuleCall_12() { return cLBRACKETTerminalRuleCall_12; }
		
		//attLists+=SuperEntityAttribute
		public Assignment getAttListsAssignment_13() { return cAttListsAssignment_13; }
		
		//SuperEntityAttribute
		public RuleCall getAttListsSuperEntityAttributeParserRuleCall_13_0() { return cAttListsSuperEntityAttributeParserRuleCall_13_0; }
		
		//(COMMA attLists+=SuperEntityAttribute)*
		public Group getGroup_14() { return cGroup_14; }
		
		//COMMA
		public RuleCall getCOMMATerminalRuleCall_14_0() { return cCOMMATerminalRuleCall_14_0; }
		
		//attLists+=SuperEntityAttribute
		public Assignment getAttListsAssignment_14_1() { return cAttListsAssignment_14_1; }
		
		//SuperEntityAttribute
		public RuleCall getAttListsSuperEntityAttributeParserRuleCall_14_1_0() { return cAttListsSuperEntityAttributeParserRuleCall_14_1_0; }
		
		//RBRACKET
		public RuleCall getRBRACKETTerminalRuleCall_15() { return cRBRACKETTerminalRuleCall_15; }
		
		//COMMA
		public RuleCall getCOMMATerminalRuleCall_16() { return cCOMMATerminalRuleCall_16; }
		
		//'entities'
		public Keyword getEntitiesKeyword_17() { return cEntitiesKeyword_17; }
		
		//COLON
		public RuleCall getCOLONTerminalRuleCall_18() { return cCOLONTerminalRuleCall_18; }
		
		//LBRACKET
		public RuleCall getLBRACKETTerminalRuleCall_19() { return cLBRACKETTerminalRuleCall_19; }
		
		//participante+=Participant
		public Assignment getParticipanteAssignment_20() { return cParticipanteAssignment_20; }
		
		//Participant
		public RuleCall getParticipanteParticipantParserRuleCall_20_0() { return cParticipanteParticipantParserRuleCall_20_0; }
		
		//(COMMA participante+=Participant)*
		public Group getGroup_21() { return cGroup_21; }
		
		//COMMA
		public RuleCall getCOMMATerminalRuleCall_21_0() { return cCOMMATerminalRuleCall_21_0; }
		
		//participante+=Participant
		public Assignment getParticipanteAssignment_21_1() { return cParticipanteAssignment_21_1; }
		
		//Participant
		public RuleCall getParticipanteParticipantParserRuleCall_21_1_0() { return cParticipanteParticipantParserRuleCall_21_1_0; }
		
		//RBRACKET
		public RuleCall getRBRACKETTerminalRuleCall_22() { return cRBRACKETTerminalRuleCall_22; }
		
		//RBRACE
		public RuleCall getRBRACETerminalRuleCall_23() { return cRBRACETerminalRuleCall_23; }
	}
	public class ParticipantElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "co.edu.uniandes.Pagos.Participant");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cParticipantAction_0 = (Action)cGroup.eContents().get(0);
		private final RuleCall cLBRACETerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Keyword cNameKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final RuleCall cCOLONTerminalRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final Assignment cNameAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cNameIDTerminalRuleCall_4_0 = (RuleCall)cNameAssignment_4.eContents().get(0);
		private final RuleCall cCOMMATerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final Keyword cDescriptionKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final RuleCall cCOLONTerminalRuleCall_7 = (RuleCall)cGroup.eContents().get(7);
		private final Assignment cDescriptionAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cDescriptionSTRINGTerminalRuleCall_8_0 = (RuleCall)cDescriptionAssignment_8.eContents().get(0);
		private final RuleCall cCOMMATerminalRuleCall_9 = (RuleCall)cGroup.eContents().get(9);
		private final Keyword cAttributesKeyword_10 = (Keyword)cGroup.eContents().get(10);
		private final RuleCall cCOLONTerminalRuleCall_11 = (RuleCall)cGroup.eContents().get(11);
		private final RuleCall cLBRACKETTerminalRuleCall_12 = (RuleCall)cGroup.eContents().get(12);
		private final Assignment cAttListsAssignment_13 = (Assignment)cGroup.eContents().get(13);
		private final RuleCall cAttListsEntityAttributeParserRuleCall_13_0 = (RuleCall)cAttListsAssignment_13.eContents().get(0);
		private final Group cGroup_14 = (Group)cGroup.eContents().get(14);
		private final RuleCall cCOMMATerminalRuleCall_14_0 = (RuleCall)cGroup_14.eContents().get(0);
		private final Assignment cAttListsAssignment_14_1 = (Assignment)cGroup_14.eContents().get(1);
		private final RuleCall cAttListsEntityAttributeParserRuleCall_14_1_0 = (RuleCall)cAttListsAssignment_14_1.eContents().get(0);
		private final RuleCall cRBRACKETTerminalRuleCall_15 = (RuleCall)cGroup.eContents().get(15);
		private final RuleCall cRBRACETerminalRuleCall_16 = (RuleCall)cGroup.eContents().get(16);
		private final Group cGroup_17 = (Group)cGroup.eContents().get(17);
		private final RuleCall cCOMMATerminalRuleCall_17_0 = (RuleCall)cGroup_17.eContents().get(0);
		private final Keyword cInformationTemplateKeyword_17_1 = (Keyword)cGroup_17.eContents().get(1);
		private final RuleCall cCOLONTerminalRuleCall_17_2 = (RuleCall)cGroup_17.eContents().get(2);
		private final RuleCall cLBRACKETTerminalRuleCall_17_3 = (RuleCall)cGroup_17.eContents().get(3);
		private final Assignment cTemplatesFormAssignment_17_4 = (Assignment)cGroup_17.eContents().get(4);
		private final RuleCall cTemplatesFormInformationTemplateParserRuleCall_17_4_0 = (RuleCall)cTemplatesFormAssignment_17_4.eContents().get(0);
		private final Group cGroup_17_5 = (Group)cGroup_17.eContents().get(5);
		private final RuleCall cCOMMATerminalRuleCall_17_5_0 = (RuleCall)cGroup_17_5.eContents().get(0);
		private final Assignment cTemplatesFormAssignment_17_5_1 = (Assignment)cGroup_17_5.eContents().get(1);
		private final RuleCall cTemplatesFormInformationTemplateParserRuleCall_17_5_1_0 = (RuleCall)cTemplatesFormAssignment_17_5_1.eContents().get(0);
		private final RuleCall cRBRACKETTerminalRuleCall_18 = (RuleCall)cGroup.eContents().get(18);
		
		//Participant:
		//	{Participant} LBRACE
		//	'name' COLON name=ID
		//	COMMA
		//	'description' COLON description=STRING
		//	COMMA
		//	'attributes' COLON
		//	LBRACKET attLists+=EntityAttribute (COMMA attLists+=EntityAttribute)* RBRACKET
		//	RBRACE (COMMA
		//	'InformationTemplate' COLON LBRACKET templatesForm+=InformationTemplate (COMMA templatesForm+=InformationTemplate)*)?
		//	RBRACKET;
		@Override public ParserRule getRule() { return rule; }
		
		//{Participant} LBRACE 'name' COLON name=ID COMMA 'description' COLON description=STRING COMMA 'attributes' COLON LBRACKET
		//attLists+=EntityAttribute (COMMA attLists+=EntityAttribute)* RBRACKET RBRACE (COMMA 'InformationTemplate' COLON
		//LBRACKET templatesForm+=InformationTemplate (COMMA templatesForm+=InformationTemplate)*)? RBRACKET
		public Group getGroup() { return cGroup; }
		
		//{Participant}
		public Action getParticipantAction_0() { return cParticipantAction_0; }
		
		//LBRACE
		public RuleCall getLBRACETerminalRuleCall_1() { return cLBRACETerminalRuleCall_1; }
		
		//'name'
		public Keyword getNameKeyword_2() { return cNameKeyword_2; }
		
		//COLON
		public RuleCall getCOLONTerminalRuleCall_3() { return cCOLONTerminalRuleCall_3; }
		
		//name=ID
		public Assignment getNameAssignment_4() { return cNameAssignment_4; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_4_0() { return cNameIDTerminalRuleCall_4_0; }
		
		//COMMA
		public RuleCall getCOMMATerminalRuleCall_5() { return cCOMMATerminalRuleCall_5; }
		
		//'description'
		public Keyword getDescriptionKeyword_6() { return cDescriptionKeyword_6; }
		
		//COLON
		public RuleCall getCOLONTerminalRuleCall_7() { return cCOLONTerminalRuleCall_7; }
		
		//description=STRING
		public Assignment getDescriptionAssignment_8() { return cDescriptionAssignment_8; }
		
		//STRING
		public RuleCall getDescriptionSTRINGTerminalRuleCall_8_0() { return cDescriptionSTRINGTerminalRuleCall_8_0; }
		
		//COMMA
		public RuleCall getCOMMATerminalRuleCall_9() { return cCOMMATerminalRuleCall_9; }
		
		//'attributes'
		public Keyword getAttributesKeyword_10() { return cAttributesKeyword_10; }
		
		//COLON
		public RuleCall getCOLONTerminalRuleCall_11() { return cCOLONTerminalRuleCall_11; }
		
		//LBRACKET
		public RuleCall getLBRACKETTerminalRuleCall_12() { return cLBRACKETTerminalRuleCall_12; }
		
		//attLists+=EntityAttribute
		public Assignment getAttListsAssignment_13() { return cAttListsAssignment_13; }
		
		//EntityAttribute
		public RuleCall getAttListsEntityAttributeParserRuleCall_13_0() { return cAttListsEntityAttributeParserRuleCall_13_0; }
		
		//(COMMA attLists+=EntityAttribute)*
		public Group getGroup_14() { return cGroup_14; }
		
		//COMMA
		public RuleCall getCOMMATerminalRuleCall_14_0() { return cCOMMATerminalRuleCall_14_0; }
		
		//attLists+=EntityAttribute
		public Assignment getAttListsAssignment_14_1() { return cAttListsAssignment_14_1; }
		
		//EntityAttribute
		public RuleCall getAttListsEntityAttributeParserRuleCall_14_1_0() { return cAttListsEntityAttributeParserRuleCall_14_1_0; }
		
		//RBRACKET
		public RuleCall getRBRACKETTerminalRuleCall_15() { return cRBRACKETTerminalRuleCall_15; }
		
		//RBRACE
		public RuleCall getRBRACETerminalRuleCall_16() { return cRBRACETerminalRuleCall_16; }
		
		//(COMMA 'InformationTemplate' COLON LBRACKET templatesForm+=InformationTemplate (COMMA
		//templatesForm+=InformationTemplate)*)?
		public Group getGroup_17() { return cGroup_17; }
		
		//COMMA
		public RuleCall getCOMMATerminalRuleCall_17_0() { return cCOMMATerminalRuleCall_17_0; }
		
		//'InformationTemplate'
		public Keyword getInformationTemplateKeyword_17_1() { return cInformationTemplateKeyword_17_1; }
		
		//COLON
		public RuleCall getCOLONTerminalRuleCall_17_2() { return cCOLONTerminalRuleCall_17_2; }
		
		//LBRACKET
		public RuleCall getLBRACKETTerminalRuleCall_17_3() { return cLBRACKETTerminalRuleCall_17_3; }
		
		//templatesForm+=InformationTemplate
		public Assignment getTemplatesFormAssignment_17_4() { return cTemplatesFormAssignment_17_4; }
		
		//InformationTemplate
		public RuleCall getTemplatesFormInformationTemplateParserRuleCall_17_4_0() { return cTemplatesFormInformationTemplateParserRuleCall_17_4_0; }
		
		//(COMMA templatesForm+=InformationTemplate)*
		public Group getGroup_17_5() { return cGroup_17_5; }
		
		//COMMA
		public RuleCall getCOMMATerminalRuleCall_17_5_0() { return cCOMMATerminalRuleCall_17_5_0; }
		
		//templatesForm+=InformationTemplate
		public Assignment getTemplatesFormAssignment_17_5_1() { return cTemplatesFormAssignment_17_5_1; }
		
		//InformationTemplate
		public RuleCall getTemplatesFormInformationTemplateParserRuleCall_17_5_1_0() { return cTemplatesFormInformationTemplateParserRuleCall_17_5_1_0; }
		
		//RBRACKET
		public RuleCall getRBRACKETTerminalRuleCall_18() { return cRBRACKETTerminalRuleCall_18; }
	}
	public class ProviderElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "co.edu.uniandes.Pagos.Provider");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cProviderAction_0 = (Action)cGroup.eContents().get(0);
		private final RuleCall cLBRACETerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Keyword cNameKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final RuleCall cCOLONTerminalRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final Assignment cNameAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cNameIDTerminalRuleCall_4_0 = (RuleCall)cNameAssignment_4.eContents().get(0);
		private final RuleCall cCOMMATerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final Keyword cDescriptionKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final RuleCall cCOLONTerminalRuleCall_7 = (RuleCall)cGroup.eContents().get(7);
		private final Assignment cDescriptionAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cDescriptionSTRINGTerminalRuleCall_8_0 = (RuleCall)cDescriptionAssignment_8.eContents().get(0);
		private final RuleCall cCOMMATerminalRuleCall_9 = (RuleCall)cGroup.eContents().get(9);
		private final Keyword cAttributesKeyword_10 = (Keyword)cGroup.eContents().get(10);
		private final RuleCall cCOLONTerminalRuleCall_11 = (RuleCall)cGroup.eContents().get(11);
		private final RuleCall cLBRACKETTerminalRuleCall_12 = (RuleCall)cGroup.eContents().get(12);
		private final Assignment cAttListsAssignment_13 = (Assignment)cGroup.eContents().get(13);
		private final RuleCall cAttListsSuperEntityAttributeParserRuleCall_13_0 = (RuleCall)cAttListsAssignment_13.eContents().get(0);
		private final Group cGroup_14 = (Group)cGroup.eContents().get(14);
		private final RuleCall cCOMMATerminalRuleCall_14_0 = (RuleCall)cGroup_14.eContents().get(0);
		private final Assignment cAttListsAssignment_14_1 = (Assignment)cGroup_14.eContents().get(1);
		private final RuleCall cAttListsSuperEntityAttributeParserRuleCall_14_1_0 = (RuleCall)cAttListsAssignment_14_1.eContents().get(0);
		private final RuleCall cRBRACKETTerminalRuleCall_15 = (RuleCall)cGroup.eContents().get(15);
		private final RuleCall cRBRACETerminalRuleCall_16 = (RuleCall)cGroup.eContents().get(16);
		
		//Provider:
		//	{Provider} LBRACE
		//	'name' COLON name=ID
		//	COMMA
		//	'description' COLON description=STRING
		//	COMMA
		//	'attributes' COLON
		//	LBRACKET attLists+=SuperEntityAttribute (COMMA attLists+=SuperEntityAttribute)* RBRACKET
		//	RBRACE;
		@Override public ParserRule getRule() { return rule; }
		
		//{Provider} LBRACE 'name' COLON name=ID COMMA 'description' COLON description=STRING COMMA 'attributes' COLON LBRACKET
		//attLists+=SuperEntityAttribute (COMMA attLists+=SuperEntityAttribute)* RBRACKET RBRACE
		public Group getGroup() { return cGroup; }
		
		//{Provider}
		public Action getProviderAction_0() { return cProviderAction_0; }
		
		//LBRACE
		public RuleCall getLBRACETerminalRuleCall_1() { return cLBRACETerminalRuleCall_1; }
		
		//'name'
		public Keyword getNameKeyword_2() { return cNameKeyword_2; }
		
		//COLON
		public RuleCall getCOLONTerminalRuleCall_3() { return cCOLONTerminalRuleCall_3; }
		
		//name=ID
		public Assignment getNameAssignment_4() { return cNameAssignment_4; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_4_0() { return cNameIDTerminalRuleCall_4_0; }
		
		//COMMA
		public RuleCall getCOMMATerminalRuleCall_5() { return cCOMMATerminalRuleCall_5; }
		
		//'description'
		public Keyword getDescriptionKeyword_6() { return cDescriptionKeyword_6; }
		
		//COLON
		public RuleCall getCOLONTerminalRuleCall_7() { return cCOLONTerminalRuleCall_7; }
		
		//description=STRING
		public Assignment getDescriptionAssignment_8() { return cDescriptionAssignment_8; }
		
		//STRING
		public RuleCall getDescriptionSTRINGTerminalRuleCall_8_0() { return cDescriptionSTRINGTerminalRuleCall_8_0; }
		
		//COMMA
		public RuleCall getCOMMATerminalRuleCall_9() { return cCOMMATerminalRuleCall_9; }
		
		//'attributes'
		public Keyword getAttributesKeyword_10() { return cAttributesKeyword_10; }
		
		//COLON
		public RuleCall getCOLONTerminalRuleCall_11() { return cCOLONTerminalRuleCall_11; }
		
		//LBRACKET
		public RuleCall getLBRACKETTerminalRuleCall_12() { return cLBRACKETTerminalRuleCall_12; }
		
		//attLists+=SuperEntityAttribute
		public Assignment getAttListsAssignment_13() { return cAttListsAssignment_13; }
		
		//SuperEntityAttribute
		public RuleCall getAttListsSuperEntityAttributeParserRuleCall_13_0() { return cAttListsSuperEntityAttributeParserRuleCall_13_0; }
		
		//(COMMA attLists+=SuperEntityAttribute)*
		public Group getGroup_14() { return cGroup_14; }
		
		//COMMA
		public RuleCall getCOMMATerminalRuleCall_14_0() { return cCOMMATerminalRuleCall_14_0; }
		
		//attLists+=SuperEntityAttribute
		public Assignment getAttListsAssignment_14_1() { return cAttListsAssignment_14_1; }
		
		//SuperEntityAttribute
		public RuleCall getAttListsSuperEntityAttributeParserRuleCall_14_1_0() { return cAttListsSuperEntityAttributeParserRuleCall_14_1_0; }
		
		//RBRACKET
		public RuleCall getRBRACKETTerminalRuleCall_15() { return cRBRACKETTerminalRuleCall_15; }
		
		//RBRACE
		public RuleCall getRBRACETerminalRuleCall_16() { return cRBRACETerminalRuleCall_16; }
	}
	public class InformationTemplateElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "co.edu.uniandes.Pagos.InformationTemplate");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cInformationTemplateAction_0 = (Action)cGroup.eContents().get(0);
		private final RuleCall cLBRACETerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Keyword cNameKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final RuleCall cCOLONTerminalRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final Assignment cNameAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cNameIDTerminalRuleCall_4_0 = (RuleCall)cNameAssignment_4.eContents().get(0);
		private final RuleCall cCOMMATerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final Keyword cDescriptionKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final RuleCall cCOLONTerminalRuleCall_7 = (RuleCall)cGroup.eContents().get(7);
		private final Assignment cDescriptionAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cDescriptionSTRINGTerminalRuleCall_8_0 = (RuleCall)cDescriptionAssignment_8.eContents().get(0);
		private final RuleCall cCOMMATerminalRuleCall_9 = (RuleCall)cGroup.eContents().get(9);
		private final Keyword cFormAttributesKeyword_10 = (Keyword)cGroup.eContents().get(10);
		private final RuleCall cCOLONTerminalRuleCall_11 = (RuleCall)cGroup.eContents().get(11);
		private final RuleCall cLBRACKETTerminalRuleCall_12 = (RuleCall)cGroup.eContents().get(12);
		private final Assignment cFormListsAssignment_13 = (Assignment)cGroup.eContents().get(13);
		private final RuleCall cFormListsFormAttributeParserRuleCall_13_0 = (RuleCall)cFormListsAssignment_13.eContents().get(0);
		private final Group cGroup_14 = (Group)cGroup.eContents().get(14);
		private final RuleCall cCOMMATerminalRuleCall_14_0 = (RuleCall)cGroup_14.eContents().get(0);
		private final Assignment cFormListsAssignment_14_1 = (Assignment)cGroup_14.eContents().get(1);
		private final RuleCall cFormListsFormAttributeParserRuleCall_14_1_0 = (RuleCall)cFormListsAssignment_14_1.eContents().get(0);
		private final RuleCall cRBRACKETTerminalRuleCall_15 = (RuleCall)cGroup.eContents().get(15);
		private final RuleCall cRBRACETerminalRuleCall_16 = (RuleCall)cGroup.eContents().get(16);
		private final Group cGroup_17 = (Group)cGroup.eContents().get(17);
		private final RuleCall cCOMMATerminalRuleCall_17_0 = (RuleCall)cGroup_17.eContents().get(0);
		private final Keyword cCalculationtemplatesKeyword_17_1 = (Keyword)cGroup_17.eContents().get(1);
		private final RuleCall cCOLONTerminalRuleCall_17_2 = (RuleCall)cGroup_17.eContents().get(2);
		private final RuleCall cLBRACKETTerminalRuleCall_17_3 = (RuleCall)cGroup_17.eContents().get(3);
		private final Assignment cTemplatesAssignment_17_4 = (Assignment)cGroup_17.eContents().get(4);
		private final RuleCall cTemplatesCalculationTemplateParserRuleCall_17_4_0 = (RuleCall)cTemplatesAssignment_17_4.eContents().get(0);
		private final Group cGroup_17_5 = (Group)cGroup_17.eContents().get(5);
		private final RuleCall cCOMMATerminalRuleCall_17_5_0 = (RuleCall)cGroup_17_5.eContents().get(0);
		private final Assignment cTemplatesAssignment_17_5_1 = (Assignment)cGroup_17_5.eContents().get(1);
		private final RuleCall cTemplatesCalculationTemplateParserRuleCall_17_5_1_0 = (RuleCall)cTemplatesAssignment_17_5_1.eContents().get(0);
		private final RuleCall cRBRACKETTerminalRuleCall_17_6 = (RuleCall)cGroup_17.eContents().get(6);
		private final Group cGroup_18 = (Group)cGroup.eContents().get(18);
		private final RuleCall cCOMMATerminalRuleCall_18_0 = (RuleCall)cGroup_18.eContents().get(0);
		private final Keyword cProvidersKeyword_18_1 = (Keyword)cGroup_18.eContents().get(1);
		private final RuleCall cCOLONTerminalRuleCall_18_2 = (RuleCall)cGroup_18.eContents().get(2);
		private final RuleCall cLBRACKETTerminalRuleCall_18_3 = (RuleCall)cGroup_18.eContents().get(3);
		private final Assignment cProvidersAssignment_18_4 = (Assignment)cGroup_18.eContents().get(4);
		private final RuleCall cProvidersProviderParserRuleCall_18_4_0 = (RuleCall)cProvidersAssignment_18_4.eContents().get(0);
		private final Group cGroup_18_5 = (Group)cGroup_18.eContents().get(5);
		private final RuleCall cCOMMATerminalRuleCall_18_5_0 = (RuleCall)cGroup_18_5.eContents().get(0);
		private final Assignment cProvidersAssignment_18_5_1 = (Assignment)cGroup_18_5.eContents().get(1);
		private final RuleCall cProvidersProviderParserRuleCall_18_5_1_0 = (RuleCall)cProvidersAssignment_18_5_1.eContents().get(0);
		private final RuleCall cRBRACKETTerminalRuleCall_18_6 = (RuleCall)cGroup_18.eContents().get(6);
		
		//InformationTemplate:
		//	{InformationTemplate} LBRACE
		//	'name' COLON name=ID
		//	COMMA
		//	'description' COLON description=STRING
		//	COMMA
		//	'FormAttributes' COLON
		//	LBRACKET formLists+=FormAttribute (COMMA formLists+=FormAttribute)* RBRACKET
		//	RBRACE (COMMA
		//	'calculationtemplates' COLON LBRACKET templates+=CalculationTemplate (COMMA templates+=CalculationTemplate)*
		//	RBRACKET)? (COMMA 'providers' COLON LBRACKET providers+=Provider (COMMA providers+=Provider)* RBRACKET)?;
		@Override public ParserRule getRule() { return rule; }
		
		//{InformationTemplate} LBRACE 'name' COLON name=ID COMMA 'description' COLON description=STRING COMMA 'FormAttributes'
		//COLON LBRACKET formLists+=FormAttribute (COMMA formLists+=FormAttribute)* RBRACKET RBRACE (COMMA 'calculationtemplates'
		//COLON LBRACKET templates+=CalculationTemplate (COMMA templates+=CalculationTemplate)* RBRACKET)? (COMMA 'providers'
		//COLON LBRACKET providers+=Provider (COMMA providers+=Provider)* RBRACKET)?
		public Group getGroup() { return cGroup; }
		
		//{InformationTemplate}
		public Action getInformationTemplateAction_0() { return cInformationTemplateAction_0; }
		
		//LBRACE
		public RuleCall getLBRACETerminalRuleCall_1() { return cLBRACETerminalRuleCall_1; }
		
		//'name'
		public Keyword getNameKeyword_2() { return cNameKeyword_2; }
		
		//COLON
		public RuleCall getCOLONTerminalRuleCall_3() { return cCOLONTerminalRuleCall_3; }
		
		//name=ID
		public Assignment getNameAssignment_4() { return cNameAssignment_4; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_4_0() { return cNameIDTerminalRuleCall_4_0; }
		
		//COMMA
		public RuleCall getCOMMATerminalRuleCall_5() { return cCOMMATerminalRuleCall_5; }
		
		//'description'
		public Keyword getDescriptionKeyword_6() { return cDescriptionKeyword_6; }
		
		//COLON
		public RuleCall getCOLONTerminalRuleCall_7() { return cCOLONTerminalRuleCall_7; }
		
		//description=STRING
		public Assignment getDescriptionAssignment_8() { return cDescriptionAssignment_8; }
		
		//STRING
		public RuleCall getDescriptionSTRINGTerminalRuleCall_8_0() { return cDescriptionSTRINGTerminalRuleCall_8_0; }
		
		//COMMA
		public RuleCall getCOMMATerminalRuleCall_9() { return cCOMMATerminalRuleCall_9; }
		
		//'FormAttributes'
		public Keyword getFormAttributesKeyword_10() { return cFormAttributesKeyword_10; }
		
		//COLON
		public RuleCall getCOLONTerminalRuleCall_11() { return cCOLONTerminalRuleCall_11; }
		
		//LBRACKET
		public RuleCall getLBRACKETTerminalRuleCall_12() { return cLBRACKETTerminalRuleCall_12; }
		
		//formLists+=FormAttribute
		public Assignment getFormListsAssignment_13() { return cFormListsAssignment_13; }
		
		//FormAttribute
		public RuleCall getFormListsFormAttributeParserRuleCall_13_0() { return cFormListsFormAttributeParserRuleCall_13_0; }
		
		//(COMMA formLists+=FormAttribute)*
		public Group getGroup_14() { return cGroup_14; }
		
		//COMMA
		public RuleCall getCOMMATerminalRuleCall_14_0() { return cCOMMATerminalRuleCall_14_0; }
		
		//formLists+=FormAttribute
		public Assignment getFormListsAssignment_14_1() { return cFormListsAssignment_14_1; }
		
		//FormAttribute
		public RuleCall getFormListsFormAttributeParserRuleCall_14_1_0() { return cFormListsFormAttributeParserRuleCall_14_1_0; }
		
		//RBRACKET
		public RuleCall getRBRACKETTerminalRuleCall_15() { return cRBRACKETTerminalRuleCall_15; }
		
		//RBRACE
		public RuleCall getRBRACETerminalRuleCall_16() { return cRBRACETerminalRuleCall_16; }
		
		//(COMMA 'calculationtemplates' COLON LBRACKET templates+=CalculationTemplate (COMMA templates+=CalculationTemplate)*
		//RBRACKET)?
		public Group getGroup_17() { return cGroup_17; }
		
		//COMMA
		public RuleCall getCOMMATerminalRuleCall_17_0() { return cCOMMATerminalRuleCall_17_0; }
		
		//'calculationtemplates'
		public Keyword getCalculationtemplatesKeyword_17_1() { return cCalculationtemplatesKeyword_17_1; }
		
		//COLON
		public RuleCall getCOLONTerminalRuleCall_17_2() { return cCOLONTerminalRuleCall_17_2; }
		
		//LBRACKET
		public RuleCall getLBRACKETTerminalRuleCall_17_3() { return cLBRACKETTerminalRuleCall_17_3; }
		
		//templates+=CalculationTemplate
		public Assignment getTemplatesAssignment_17_4() { return cTemplatesAssignment_17_4; }
		
		//CalculationTemplate
		public RuleCall getTemplatesCalculationTemplateParserRuleCall_17_4_0() { return cTemplatesCalculationTemplateParserRuleCall_17_4_0; }
		
		//(COMMA templates+=CalculationTemplate)*
		public Group getGroup_17_5() { return cGroup_17_5; }
		
		//COMMA
		public RuleCall getCOMMATerminalRuleCall_17_5_0() { return cCOMMATerminalRuleCall_17_5_0; }
		
		//templates+=CalculationTemplate
		public Assignment getTemplatesAssignment_17_5_1() { return cTemplatesAssignment_17_5_1; }
		
		//CalculationTemplate
		public RuleCall getTemplatesCalculationTemplateParserRuleCall_17_5_1_0() { return cTemplatesCalculationTemplateParserRuleCall_17_5_1_0; }
		
		//RBRACKET
		public RuleCall getRBRACKETTerminalRuleCall_17_6() { return cRBRACKETTerminalRuleCall_17_6; }
		
		//(COMMA 'providers' COLON LBRACKET providers+=Provider (COMMA providers+=Provider)* RBRACKET)?
		public Group getGroup_18() { return cGroup_18; }
		
		//COMMA
		public RuleCall getCOMMATerminalRuleCall_18_0() { return cCOMMATerminalRuleCall_18_0; }
		
		//'providers'
		public Keyword getProvidersKeyword_18_1() { return cProvidersKeyword_18_1; }
		
		//COLON
		public RuleCall getCOLONTerminalRuleCall_18_2() { return cCOLONTerminalRuleCall_18_2; }
		
		//LBRACKET
		public RuleCall getLBRACKETTerminalRuleCall_18_3() { return cLBRACKETTerminalRuleCall_18_3; }
		
		//providers+=Provider
		public Assignment getProvidersAssignment_18_4() { return cProvidersAssignment_18_4; }
		
		//Provider
		public RuleCall getProvidersProviderParserRuleCall_18_4_0() { return cProvidersProviderParserRuleCall_18_4_0; }
		
		//(COMMA providers+=Provider)*
		public Group getGroup_18_5() { return cGroup_18_5; }
		
		//COMMA
		public RuleCall getCOMMATerminalRuleCall_18_5_0() { return cCOMMATerminalRuleCall_18_5_0; }
		
		//providers+=Provider
		public Assignment getProvidersAssignment_18_5_1() { return cProvidersAssignment_18_5_1; }
		
		//Provider
		public RuleCall getProvidersProviderParserRuleCall_18_5_1_0() { return cProvidersProviderParserRuleCall_18_5_1_0; }
		
		//RBRACKET
		public RuleCall getRBRACKETTerminalRuleCall_18_6() { return cRBRACKETTerminalRuleCall_18_6; }
	}
	public class CalculationTemplateElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "co.edu.uniandes.Pagos.CalculationTemplate");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cCalculationTemplateAction_0 = (Action)cGroup.eContents().get(0);
		private final RuleCall cLBRACETerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Keyword cNameKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final RuleCall cCOLONTerminalRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final Assignment cNameAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cNameIDTerminalRuleCall_4_0 = (RuleCall)cNameAssignment_4.eContents().get(0);
		private final RuleCall cCOMMATerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final Keyword cDescriptionKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final RuleCall cCOLONTerminalRuleCall_7 = (RuleCall)cGroup.eContents().get(7);
		private final Assignment cDescriptionAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cDescriptionSTRINGTerminalRuleCall_8_0 = (RuleCall)cDescriptionAssignment_8.eContents().get(0);
		private final RuleCall cCOMMATerminalRuleCall_9 = (RuleCall)cGroup.eContents().get(9);
		private final Keyword cCalculationattributesKeyword_10 = (Keyword)cGroup.eContents().get(10);
		private final RuleCall cCOLONTerminalRuleCall_11 = (RuleCall)cGroup.eContents().get(11);
		private final RuleCall cLBRACKETTerminalRuleCall_12 = (RuleCall)cGroup.eContents().get(12);
		private final Assignment cAttListsAssignment_13 = (Assignment)cGroup.eContents().get(13);
		private final RuleCall cAttListsVariableAttributeParserRuleCall_13_0 = (RuleCall)cAttListsAssignment_13.eContents().get(0);
		private final Group cGroup_14 = (Group)cGroup.eContents().get(14);
		private final RuleCall cCOMMATerminalRuleCall_14_0 = (RuleCall)cGroup_14.eContents().get(0);
		private final Assignment cAttListsAssignment_14_1 = (Assignment)cGroup_14.eContents().get(1);
		private final RuleCall cAttListsVariableAttributeParserRuleCall_14_1_0 = (RuleCall)cAttListsAssignment_14_1.eContents().get(0);
		private final RuleCall cRBRACKETTerminalRuleCall_15 = (RuleCall)cGroup.eContents().get(15);
		private final RuleCall cCOMMATerminalRuleCall_16 = (RuleCall)cGroup.eContents().get(16);
		private final Keyword cCalculationrulesKeyword_17 = (Keyword)cGroup.eContents().get(17);
		private final RuleCall cCOLONTerminalRuleCall_18 = (RuleCall)cGroup.eContents().get(18);
		private final Assignment cFormulaAssignment_19 = (Assignment)cGroup.eContents().get(19);
		private final RuleCall cFormulaFormulaParserRuleCall_19_0 = (RuleCall)cFormulaAssignment_19.eContents().get(0);
		private final RuleCall cRBRACETerminalRuleCall_20 = (RuleCall)cGroup.eContents().get(20);
		
		//CalculationTemplate:
		//	{CalculationTemplate} LBRACE
		//	'name' COLON name=ID
		//	COMMA
		//	'description' COLON description=STRING
		//	COMMA
		//	'calculationattributes' COLON
		//	LBRACKET attLists+=VariableAttribute (COMMA attLists+=VariableAttribute)* RBRACKET
		//	COMMA
		//	'calculationrules' COLON formula+=Formula
		//	RBRACE;
		@Override public ParserRule getRule() { return rule; }
		
		//{CalculationTemplate} LBRACE 'name' COLON name=ID COMMA 'description' COLON description=STRING COMMA
		//'calculationattributes' COLON LBRACKET attLists+=VariableAttribute (COMMA attLists+=VariableAttribute)* RBRACKET COMMA
		//'calculationrules' COLON formula+=Formula RBRACE
		public Group getGroup() { return cGroup; }
		
		//{CalculationTemplate}
		public Action getCalculationTemplateAction_0() { return cCalculationTemplateAction_0; }
		
		//LBRACE
		public RuleCall getLBRACETerminalRuleCall_1() { return cLBRACETerminalRuleCall_1; }
		
		//'name'
		public Keyword getNameKeyword_2() { return cNameKeyword_2; }
		
		//COLON
		public RuleCall getCOLONTerminalRuleCall_3() { return cCOLONTerminalRuleCall_3; }
		
		//name=ID
		public Assignment getNameAssignment_4() { return cNameAssignment_4; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_4_0() { return cNameIDTerminalRuleCall_4_0; }
		
		//COMMA
		public RuleCall getCOMMATerminalRuleCall_5() { return cCOMMATerminalRuleCall_5; }
		
		//'description'
		public Keyword getDescriptionKeyword_6() { return cDescriptionKeyword_6; }
		
		//COLON
		public RuleCall getCOLONTerminalRuleCall_7() { return cCOLONTerminalRuleCall_7; }
		
		//description=STRING
		public Assignment getDescriptionAssignment_8() { return cDescriptionAssignment_8; }
		
		//STRING
		public RuleCall getDescriptionSTRINGTerminalRuleCall_8_0() { return cDescriptionSTRINGTerminalRuleCall_8_0; }
		
		//COMMA
		public RuleCall getCOMMATerminalRuleCall_9() { return cCOMMATerminalRuleCall_9; }
		
		//'calculationattributes'
		public Keyword getCalculationattributesKeyword_10() { return cCalculationattributesKeyword_10; }
		
		//COLON
		public RuleCall getCOLONTerminalRuleCall_11() { return cCOLONTerminalRuleCall_11; }
		
		//LBRACKET
		public RuleCall getLBRACKETTerminalRuleCall_12() { return cLBRACKETTerminalRuleCall_12; }
		
		//attLists+=VariableAttribute
		public Assignment getAttListsAssignment_13() { return cAttListsAssignment_13; }
		
		//VariableAttribute
		public RuleCall getAttListsVariableAttributeParserRuleCall_13_0() { return cAttListsVariableAttributeParserRuleCall_13_0; }
		
		//(COMMA attLists+=VariableAttribute)*
		public Group getGroup_14() { return cGroup_14; }
		
		//COMMA
		public RuleCall getCOMMATerminalRuleCall_14_0() { return cCOMMATerminalRuleCall_14_0; }
		
		//attLists+=VariableAttribute
		public Assignment getAttListsAssignment_14_1() { return cAttListsAssignment_14_1; }
		
		//VariableAttribute
		public RuleCall getAttListsVariableAttributeParserRuleCall_14_1_0() { return cAttListsVariableAttributeParserRuleCall_14_1_0; }
		
		//RBRACKET
		public RuleCall getRBRACKETTerminalRuleCall_15() { return cRBRACKETTerminalRuleCall_15; }
		
		//COMMA
		public RuleCall getCOMMATerminalRuleCall_16() { return cCOMMATerminalRuleCall_16; }
		
		//'calculationrules'
		public Keyword getCalculationrulesKeyword_17() { return cCalculationrulesKeyword_17; }
		
		//COLON
		public RuleCall getCOLONTerminalRuleCall_18() { return cCOLONTerminalRuleCall_18; }
		
		//formula+=Formula
		public Assignment getFormulaAssignment_19() { return cFormulaAssignment_19; }
		
		//Formula
		public RuleCall getFormulaFormulaParserRuleCall_19_0() { return cFormulaFormulaParserRuleCall_19_0; }
		
		//RBRACE
		public RuleCall getRBRACETerminalRuleCall_20() { return cRBRACETerminalRuleCall_20; }
	}
	public class FormulaElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "co.edu.uniandes.Pagos.Formula");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cFormulaAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cSiKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cLBRACKETTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cLogExpAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cLogExpExpresionLogicaParserRuleCall_3_0 = (RuleCall)cLogExpAssignment_3.eContents().get(0);
		private final RuleCall cRBRACKETTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final Keyword cEntoncesKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final RuleCall cLBRACETerminalRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		private final Keyword cRetornarKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Assignment cExpressionAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cExpressionAdicionParserRuleCall_8_0 = (RuleCall)cExpressionAssignment_8.eContents().get(0);
		private final RuleCall cRBRACETerminalRuleCall_9 = (RuleCall)cGroup.eContents().get(9);
		private final Group cGroup_10 = (Group)cGroup.eContents().get(10);
		private final Keyword cSinoKeyword_10_0 = (Keyword)cGroup_10.eContents().get(0);
		private final Group cGroup_10_1 = (Group)cGroup_10.eContents().get(1);
		private final Keyword cSiKeyword_10_1_0 = (Keyword)cGroup_10_1.eContents().get(0);
		private final RuleCall cLBRACKETTerminalRuleCall_10_1_1 = (RuleCall)cGroup_10_1.eContents().get(1);
		private final Assignment cLogExpAssignment_10_1_2 = (Assignment)cGroup_10_1.eContents().get(2);
		private final RuleCall cLogExpExpresionLogicaParserRuleCall_10_1_2_0 = (RuleCall)cLogExpAssignment_10_1_2.eContents().get(0);
		private final RuleCall cRBRACKETTerminalRuleCall_10_1_3 = (RuleCall)cGroup_10_1.eContents().get(3);
		private final Keyword cEntoncesKeyword_10_1_4 = (Keyword)cGroup_10_1.eContents().get(4);
		private final RuleCall cLBRACETerminalRuleCall_10_2 = (RuleCall)cGroup_10.eContents().get(2);
		private final Keyword cRetornarKeyword_10_3 = (Keyword)cGroup_10.eContents().get(3);
		private final Assignment cExpressionAssignment_10_4 = (Assignment)cGroup_10.eContents().get(4);
		private final RuleCall cExpressionAdicionParserRuleCall_10_4_0 = (RuleCall)cExpressionAssignment_10_4.eContents().get(0);
		private final RuleCall cRBRACETerminalRuleCall_10_5 = (RuleCall)cGroup_10.eContents().get(5);
		
		//Formula:
		//	{Formula}
		//	'Si' LBRACKET
		//	logExp+=ExpresionLogica
		//	RBRACKET
		//	'Entonces'
		//	LBRACE
		//	'Retornar:' expression+=Adicion
		//	RBRACE ('Sino'? ('Si'
		//	LBRACKET
		//	logExp+=ExpresionLogica
		//	RBRACKET
		//	'Entonces')?
		//	LBRACE
		//	'Retornar:' expression+=Adicion
		//	RBRACE)*;
		@Override public ParserRule getRule() { return rule; }
		
		//{Formula} 'Si' LBRACKET logExp+=ExpresionLogica RBRACKET 'Entonces' LBRACE 'Retornar:' expression+=Adicion RBRACE
		//('Sino'? ('Si' LBRACKET logExp+=ExpresionLogica RBRACKET 'Entonces')? LBRACE 'Retornar:' expression+=Adicion RBRACE)*
		public Group getGroup() { return cGroup; }
		
		//{Formula}
		public Action getFormulaAction_0() { return cFormulaAction_0; }
		
		//'Si'
		public Keyword getSiKeyword_1() { return cSiKeyword_1; }
		
		//LBRACKET
		public RuleCall getLBRACKETTerminalRuleCall_2() { return cLBRACKETTerminalRuleCall_2; }
		
		//logExp+=ExpresionLogica
		public Assignment getLogExpAssignment_3() { return cLogExpAssignment_3; }
		
		//ExpresionLogica
		public RuleCall getLogExpExpresionLogicaParserRuleCall_3_0() { return cLogExpExpresionLogicaParserRuleCall_3_0; }
		
		//RBRACKET
		public RuleCall getRBRACKETTerminalRuleCall_4() { return cRBRACKETTerminalRuleCall_4; }
		
		//'Entonces'
		public Keyword getEntoncesKeyword_5() { return cEntoncesKeyword_5; }
		
		//LBRACE
		public RuleCall getLBRACETerminalRuleCall_6() { return cLBRACETerminalRuleCall_6; }
		
		//'Retornar:'
		public Keyword getRetornarKeyword_7() { return cRetornarKeyword_7; }
		
		//expression+=Adicion
		public Assignment getExpressionAssignment_8() { return cExpressionAssignment_8; }
		
		//Adicion
		public RuleCall getExpressionAdicionParserRuleCall_8_0() { return cExpressionAdicionParserRuleCall_8_0; }
		
		//RBRACE
		public RuleCall getRBRACETerminalRuleCall_9() { return cRBRACETerminalRuleCall_9; }
		
		//('Sino'? ('Si' LBRACKET logExp+=ExpresionLogica RBRACKET 'Entonces')? LBRACE 'Retornar:' expression+=Adicion RBRACE)*
		public Group getGroup_10() { return cGroup_10; }
		
		//'Sino'?
		public Keyword getSinoKeyword_10_0() { return cSinoKeyword_10_0; }
		
		//('Si' LBRACKET logExp+=ExpresionLogica RBRACKET 'Entonces')?
		public Group getGroup_10_1() { return cGroup_10_1; }
		
		//'Si'
		public Keyword getSiKeyword_10_1_0() { return cSiKeyword_10_1_0; }
		
		//LBRACKET
		public RuleCall getLBRACKETTerminalRuleCall_10_1_1() { return cLBRACKETTerminalRuleCall_10_1_1; }
		
		//logExp+=ExpresionLogica
		public Assignment getLogExpAssignment_10_1_2() { return cLogExpAssignment_10_1_2; }
		
		//ExpresionLogica
		public RuleCall getLogExpExpresionLogicaParserRuleCall_10_1_2_0() { return cLogExpExpresionLogicaParserRuleCall_10_1_2_0; }
		
		//RBRACKET
		public RuleCall getRBRACKETTerminalRuleCall_10_1_3() { return cRBRACKETTerminalRuleCall_10_1_3; }
		
		//'Entonces'
		public Keyword getEntoncesKeyword_10_1_4() { return cEntoncesKeyword_10_1_4; }
		
		//LBRACE
		public RuleCall getLBRACETerminalRuleCall_10_2() { return cLBRACETerminalRuleCall_10_2; }
		
		//'Retornar:'
		public Keyword getRetornarKeyword_10_3() { return cRetornarKeyword_10_3; }
		
		//expression+=Adicion
		public Assignment getExpressionAssignment_10_4() { return cExpressionAssignment_10_4; }
		
		//Adicion
		public RuleCall getExpressionAdicionParserRuleCall_10_4_0() { return cExpressionAdicionParserRuleCall_10_4_0; }
		
		//RBRACE
		public RuleCall getRBRACETerminalRuleCall_10_5() { return cRBRACETerminalRuleCall_10_5; }
	}
	public class ExpresionLogicaElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "co.edu.uniandes.Pagos.ExpresionLogica");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cVariableAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cVariableTerminalValueParserRuleCall_0_0 = (RuleCall)cVariableAssignment_0.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Assignment cLogOperAssignment_1_0 = (Assignment)cGroup_1.eContents().get(0);
		private final RuleCall cLogOperOPERADORLOGICOTerminalRuleCall_1_0_0 = (RuleCall)cLogOperAssignment_1_0.eContents().get(0);
		private final Alternatives cAlternatives_1_1 = (Alternatives)cGroup_1.eContents().get(1);
		private final Assignment cVariable2Assignment_1_1_0 = (Assignment)cAlternatives_1_1.eContents().get(0);
		private final RuleCall cVariable2TerminalValueParserRuleCall_1_1_0_0 = (RuleCall)cVariable2Assignment_1_1_0.eContents().get(0);
		private final Assignment cLiteralAssignment_1_1_1 = (Assignment)cAlternatives_1_1.eContents().get(1);
		private final RuleCall cLiteralSTRINGTerminalRuleCall_1_1_1_0 = (RuleCall)cLiteralAssignment_1_1_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final RuleCall cLOGICALCONNTerminalRuleCall_2_0 = (RuleCall)cGroup_2.eContents().get(0);
		private final Assignment cExpAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cExpExpresionLogicaParserRuleCall_2_1_0 = (RuleCall)cExpAssignment_2_1.eContents().get(0);
		
		//ExpresionLogica:
		//	variable+=TerminalValue (logOper+=OPERADORLOGICO (variable2+=TerminalValue | literal+=STRING))+ (LOGICALCONN
		//	exp+=ExpresionLogica)?;
		@Override public ParserRule getRule() { return rule; }
		
		//variable+=TerminalValue (logOper+=OPERADORLOGICO (variable2+=TerminalValue | literal+=STRING))+ (LOGICALCONN
		//exp+=ExpresionLogica)?
		public Group getGroup() { return cGroup; }
		
		//variable+=TerminalValue
		public Assignment getVariableAssignment_0() { return cVariableAssignment_0; }
		
		//TerminalValue
		public RuleCall getVariableTerminalValueParserRuleCall_0_0() { return cVariableTerminalValueParserRuleCall_0_0; }
		
		//(logOper+=OPERADORLOGICO (variable2+=TerminalValue | literal+=STRING))+
		public Group getGroup_1() { return cGroup_1; }
		
		//logOper+=OPERADORLOGICO
		public Assignment getLogOperAssignment_1_0() { return cLogOperAssignment_1_0; }
		
		//OPERADORLOGICO
		public RuleCall getLogOperOPERADORLOGICOTerminalRuleCall_1_0_0() { return cLogOperOPERADORLOGICOTerminalRuleCall_1_0_0; }
		
		//(variable2+=TerminalValue | literal+=STRING)
		public Alternatives getAlternatives_1_1() { return cAlternatives_1_1; }
		
		//variable2+=TerminalValue
		public Assignment getVariable2Assignment_1_1_0() { return cVariable2Assignment_1_1_0; }
		
		//TerminalValue
		public RuleCall getVariable2TerminalValueParserRuleCall_1_1_0_0() { return cVariable2TerminalValueParserRuleCall_1_1_0_0; }
		
		//literal+=STRING
		public Assignment getLiteralAssignment_1_1_1() { return cLiteralAssignment_1_1_1; }
		
		//STRING
		public RuleCall getLiteralSTRINGTerminalRuleCall_1_1_1_0() { return cLiteralSTRINGTerminalRuleCall_1_1_1_0; }
		
		//(LOGICALCONN exp+=ExpresionLogica)?
		public Group getGroup_2() { return cGroup_2; }
		
		//LOGICALCONN
		public RuleCall getLOGICALCONNTerminalRuleCall_2_0() { return cLOGICALCONNTerminalRuleCall_2_0; }
		
		//exp+=ExpresionLogica
		public Assignment getExpAssignment_2_1() { return cExpAssignment_2_1; }
		
		//ExpresionLogica
		public RuleCall getExpExpresionLogicaParserRuleCall_2_1_0() { return cExpExpresionLogicaParserRuleCall_2_1_0; }
	}
	public class AdicionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "co.edu.uniandes.Pagos.Adicion");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cMultiplicacionParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Action cAdicionLeftAction_1_0 = (Action)cGroup_1.eContents().get(0);
		private final Assignment cOperatorAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cOperatorMathADDParserRuleCall_1_1_0 = (RuleCall)cOperatorAssignment_1_1.eContents().get(0);
		private final Assignment cRexpAssignment_1_2 = (Assignment)cGroup_1.eContents().get(2);
		private final RuleCall cRexpMultiplicacionParserRuleCall_1_2_0 = (RuleCall)cRexpAssignment_1_2.eContents().get(0);
		
		//Adicion Expression:
		//	Multiplicacion ({Adicion.left=current} operator=mathADD rexp=Multiplicacion)*
		@Override public ParserRule getRule() { return rule; }
		
		//Multiplicacion ({Adicion.left=current} operator=mathADD rexp=Multiplicacion)*
		public Group getGroup() { return cGroup; }
		
		//Multiplicacion
		public RuleCall getMultiplicacionParserRuleCall_0() { return cMultiplicacionParserRuleCall_0; }
		
		//({Adicion.left=current} operator=mathADD rexp=Multiplicacion)*
		public Group getGroup_1() { return cGroup_1; }
		
		//{Adicion.left=current}
		public Action getAdicionLeftAction_1_0() { return cAdicionLeftAction_1_0; }
		
		//operator=mathADD
		public Assignment getOperatorAssignment_1_1() { return cOperatorAssignment_1_1; }
		
		//mathADD
		public RuleCall getOperatorMathADDParserRuleCall_1_1_0() { return cOperatorMathADDParserRuleCall_1_1_0; }
		
		//rexp=Multiplicacion
		public Assignment getRexpAssignment_1_2() { return cRexpAssignment_1_2; }
		
		//Multiplicacion
		public RuleCall getRexpMultiplicacionParserRuleCall_1_2_0() { return cRexpMultiplicacionParserRuleCall_1_2_0; }
	}
	public class MultiplicacionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "co.edu.uniandes.Pagos.Multiplicacion");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cSigleExpParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Action cMultiplicacionLeftAction_1_0 = (Action)cGroup_1.eContents().get(0);
		private final Assignment cOperatorAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cOperatorMathMULTParserRuleCall_1_1_0 = (RuleCall)cOperatorAssignment_1_1.eContents().get(0);
		private final Assignment cRexpAssignment_1_2 = (Assignment)cGroup_1.eContents().get(2);
		private final RuleCall cRexpSigleExpParserRuleCall_1_2_0 = (RuleCall)cRexpAssignment_1_2.eContents().get(0);
		
		//Multiplicacion Expression:
		//	SigleExp ({Multiplicacion.left=current} operator=mathMULT rexp=SigleExp)*
		@Override public ParserRule getRule() { return rule; }
		
		//SigleExp ({Multiplicacion.left=current} operator=mathMULT rexp=SigleExp)*
		public Group getGroup() { return cGroup; }
		
		//SigleExp
		public RuleCall getSigleExpParserRuleCall_0() { return cSigleExpParserRuleCall_0; }
		
		//({Multiplicacion.left=current} operator=mathMULT rexp=SigleExp)*
		public Group getGroup_1() { return cGroup_1; }
		
		//{Multiplicacion.left=current}
		public Action getMultiplicacionLeftAction_1_0() { return cMultiplicacionLeftAction_1_0; }
		
		//operator=mathMULT
		public Assignment getOperatorAssignment_1_1() { return cOperatorAssignment_1_1; }
		
		//mathMULT
		public RuleCall getOperatorMathMULTParserRuleCall_1_1_0() { return cOperatorMathMULTParserRuleCall_1_1_0; }
		
		//rexp=SigleExp
		public Assignment getRexpAssignment_1_2() { return cRexpAssignment_1_2; }
		
		//SigleExp
		public RuleCall getRexpSigleExpParserRuleCall_1_2_0() { return cRexpSigleExpParserRuleCall_1_2_0; }
	}
	public class SigleExpElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "co.edu.uniandes.Pagos.SigleExp");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cTerminalValueParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Keyword cLeftParenthesisKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final RuleCall cAdicionParserRuleCall_1_1 = (RuleCall)cGroup_1.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_1_2 = (Keyword)cGroup_1.eContents().get(2);
		
		//SigleExp Expression:
		//	TerminalValue | '(' Adicion ')'
		@Override public ParserRule getRule() { return rule; }
		
		//TerminalValue | '(' Adicion ')'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//TerminalValue
		public RuleCall getTerminalValueParserRuleCall_0() { return cTerminalValueParserRuleCall_0; }
		
		//'(' Adicion ')'
		public Group getGroup_1() { return cGroup_1; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_1_0() { return cLeftParenthesisKeyword_1_0; }
		
		//Adicion
		public RuleCall getAdicionParserRuleCall_1_1() { return cAdicionParserRuleCall_1_1; }
		
		//')'
		public Keyword getRightParenthesisKeyword_1_2() { return cRightParenthesisKeyword_1_2; }
	}
	public class SuperEntityAttributeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "co.edu.uniandes.Pagos.SuperEntityAttribute");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cSuperEntityAttributeAction_0 = (Action)cGroup.eContents().get(0);
		private final RuleCall cLBRACETerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final RuleCall cCOLONTerminalRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final Assignment cTypeAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cTypeTYPETerminalRuleCall_4_0 = (RuleCall)cTypeAssignment_4.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cColonEqualsSignKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final RuleCall cNumberParserRuleCall_5_1 = (RuleCall)cGroup_5.eContents().get(1);
		private final RuleCall cRBRACETerminalRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		
		//SuperEntityAttribute:
		//	{SuperEntityAttribute} LBRACE
		//	name=ID COLON type=TYPE (':=' Number)?
		//	RBRACE;
		@Override public ParserRule getRule() { return rule; }
		
		//{SuperEntityAttribute} LBRACE name=ID COLON type=TYPE (':=' Number)? RBRACE
		public Group getGroup() { return cGroup; }
		
		//{SuperEntityAttribute}
		public Action getSuperEntityAttributeAction_0() { return cSuperEntityAttributeAction_0; }
		
		//LBRACE
		public RuleCall getLBRACETerminalRuleCall_1() { return cLBRACETerminalRuleCall_1; }
		
		//name=ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }
		
		//COLON
		public RuleCall getCOLONTerminalRuleCall_3() { return cCOLONTerminalRuleCall_3; }
		
		//type=TYPE
		public Assignment getTypeAssignment_4() { return cTypeAssignment_4; }
		
		//TYPE
		public RuleCall getTypeTYPETerminalRuleCall_4_0() { return cTypeTYPETerminalRuleCall_4_0; }
		
		//(':=' Number)?
		public Group getGroup_5() { return cGroup_5; }
		
		//':='
		public Keyword getColonEqualsSignKeyword_5_0() { return cColonEqualsSignKeyword_5_0; }
		
		//Number
		public RuleCall getNumberParserRuleCall_5_1() { return cNumberParserRuleCall_5_1; }
		
		//RBRACE
		public RuleCall getRBRACETerminalRuleCall_6() { return cRBRACETerminalRuleCall_6; }
	}
	public class EntityAttributeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "co.edu.uniandes.Pagos.EntityAttribute");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cEntityAttributeAction_0 = (Action)cGroup.eContents().get(0);
		private final RuleCall cLBRACETerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final RuleCall cCOLONTerminalRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final Assignment cTypeAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cTypeTYPETerminalRuleCall_4_0 = (RuleCall)cTypeAssignment_4.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cColonEqualsSignKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final RuleCall cNumberParserRuleCall_5_1 = (RuleCall)cGroup_5.eContents().get(1);
		private final RuleCall cRBRACETerminalRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		
		//EntityAttribute:
		//	{EntityAttribute} LBRACE
		//	name=ID COLON type=TYPE (':=' Number)?
		//	RBRACE;
		@Override public ParserRule getRule() { return rule; }
		
		//{EntityAttribute} LBRACE name=ID COLON type=TYPE (':=' Number)? RBRACE
		public Group getGroup() { return cGroup; }
		
		//{EntityAttribute}
		public Action getEntityAttributeAction_0() { return cEntityAttributeAction_0; }
		
		//LBRACE
		public RuleCall getLBRACETerminalRuleCall_1() { return cLBRACETerminalRuleCall_1; }
		
		//name=ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }
		
		//COLON
		public RuleCall getCOLONTerminalRuleCall_3() { return cCOLONTerminalRuleCall_3; }
		
		//type=TYPE
		public Assignment getTypeAssignment_4() { return cTypeAssignment_4; }
		
		//TYPE
		public RuleCall getTypeTYPETerminalRuleCall_4_0() { return cTypeTYPETerminalRuleCall_4_0; }
		
		//(':=' Number)?
		public Group getGroup_5() { return cGroup_5; }
		
		//':='
		public Keyword getColonEqualsSignKeyword_5_0() { return cColonEqualsSignKeyword_5_0; }
		
		//Number
		public RuleCall getNumberParserRuleCall_5_1() { return cNumberParserRuleCall_5_1; }
		
		//RBRACE
		public RuleCall getRBRACETerminalRuleCall_6() { return cRBRACETerminalRuleCall_6; }
	}
	public class FormAttributeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "co.edu.uniandes.Pagos.FormAttribute");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cFormAttributeAction_0 = (Action)cGroup.eContents().get(0);
		private final RuleCall cLBRACETerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final RuleCall cCOLONTerminalRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final Assignment cTypeAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cTypeTYPETerminalRuleCall_4_0 = (RuleCall)cTypeAssignment_4.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cColonEqualsSignKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cExpAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cExpAdicionParserRuleCall_5_1_0 = (RuleCall)cExpAssignment_5_1.eContents().get(0);
		private final RuleCall cRBRACETerminalRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		
		//FormAttribute:
		//	{FormAttribute} LBRACE
		//	name=ID COLON type=TYPE (':=' exp=Adicion)?
		//	RBRACE;
		@Override public ParserRule getRule() { return rule; }
		
		//{FormAttribute} LBRACE name=ID COLON type=TYPE (':=' exp=Adicion)? RBRACE
		public Group getGroup() { return cGroup; }
		
		//{FormAttribute}
		public Action getFormAttributeAction_0() { return cFormAttributeAction_0; }
		
		//LBRACE
		public RuleCall getLBRACETerminalRuleCall_1() { return cLBRACETerminalRuleCall_1; }
		
		//name=ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }
		
		//COLON
		public RuleCall getCOLONTerminalRuleCall_3() { return cCOLONTerminalRuleCall_3; }
		
		//type=TYPE
		public Assignment getTypeAssignment_4() { return cTypeAssignment_4; }
		
		//TYPE
		public RuleCall getTypeTYPETerminalRuleCall_4_0() { return cTypeTYPETerminalRuleCall_4_0; }
		
		//(':=' exp=Adicion)?
		public Group getGroup_5() { return cGroup_5; }
		
		//':='
		public Keyword getColonEqualsSignKeyword_5_0() { return cColonEqualsSignKeyword_5_0; }
		
		//exp=Adicion
		public Assignment getExpAssignment_5_1() { return cExpAssignment_5_1; }
		
		//Adicion
		public RuleCall getExpAdicionParserRuleCall_5_1_0() { return cExpAdicionParserRuleCall_5_1_0; }
		
		//RBRACE
		public RuleCall getRBRACETerminalRuleCall_6() { return cRBRACETerminalRuleCall_6; }
	}
	public class VariableAttributeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "co.edu.uniandes.Pagos.VariableAttribute");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cVariableAttributeAction_0 = (Action)cGroup.eContents().get(0);
		private final RuleCall cLBRACETerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final RuleCall cCOLONTerminalRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final Assignment cTypeAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cTypeTYPETerminalRuleCall_4_0 = (RuleCall)cTypeAssignment_4.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cColonEqualsSignKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cExpAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cExpAdicionParserRuleCall_5_1_0 = (RuleCall)cExpAssignment_5_1.eContents().get(0);
		private final RuleCall cRBRACETerminalRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		
		//VariableAttribute:
		//	{VariableAttribute} LBRACE
		//	name=ID COLON type=TYPE (':=' exp=Adicion)?
		//	RBRACE;
		@Override public ParserRule getRule() { return rule; }
		
		//{VariableAttribute} LBRACE name=ID COLON type=TYPE (':=' exp=Adicion)? RBRACE
		public Group getGroup() { return cGroup; }
		
		//{VariableAttribute}
		public Action getVariableAttributeAction_0() { return cVariableAttributeAction_0; }
		
		//LBRACE
		public RuleCall getLBRACETerminalRuleCall_1() { return cLBRACETerminalRuleCall_1; }
		
		//name=ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }
		
		//COLON
		public RuleCall getCOLONTerminalRuleCall_3() { return cCOLONTerminalRuleCall_3; }
		
		//type=TYPE
		public Assignment getTypeAssignment_4() { return cTypeAssignment_4; }
		
		//TYPE
		public RuleCall getTypeTYPETerminalRuleCall_4_0() { return cTypeTYPETerminalRuleCall_4_0; }
		
		//(':=' exp=Adicion)?
		public Group getGroup_5() { return cGroup_5; }
		
		//':='
		public Keyword getColonEqualsSignKeyword_5_0() { return cColonEqualsSignKeyword_5_0; }
		
		//exp=Adicion
		public Assignment getExpAssignment_5_1() { return cExpAssignment_5_1; }
		
		//Adicion
		public RuleCall getExpAdicionParserRuleCall_5_1_0() { return cExpAdicionParserRuleCall_5_1_0; }
		
		//RBRACE
		public RuleCall getRBRACETerminalRuleCall_6() { return cRBRACETerminalRuleCall_6; }
	}
	public class CalculationAttributeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "co.edu.uniandes.Pagos.CalculationAttribute");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cVariableAttributeParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cEntityAttributeParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cFormAttributeParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cSuperEntityAttributeParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		
		//CalculationAttribute:
		//	VariableAttribute | EntityAttribute | FormAttribute | SuperEntityAttribute;
		@Override public ParserRule getRule() { return rule; }
		
		//VariableAttribute | EntityAttribute | FormAttribute | SuperEntityAttribute
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//VariableAttribute
		public RuleCall getVariableAttributeParserRuleCall_0() { return cVariableAttributeParserRuleCall_0; }
		
		//EntityAttribute
		public RuleCall getEntityAttributeParserRuleCall_1() { return cEntityAttributeParserRuleCall_1; }
		
		//FormAttribute
		public RuleCall getFormAttributeParserRuleCall_2() { return cFormAttributeParserRuleCall_2; }
		
		//SuperEntityAttribute
		public RuleCall getSuperEntityAttributeParserRuleCall_3() { return cSuperEntityAttributeParserRuleCall_3; }
	}
	public class TerminalValueElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "co.edu.uniandes.Pagos.TerminalValue");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final Action cTerminalValueAction_0_0 = (Action)cGroup_0.eContents().get(0);
		private final Assignment cVariableAssignment_0_1 = (Assignment)cGroup_0.eContents().get(1);
		private final CrossReference cVariableCalculationAttributeCrossReference_0_1_0 = (CrossReference)cVariableAssignment_0_1.eContents().get(0);
		private final RuleCall cVariableCalculationAttributeIDTerminalRuleCall_0_1_0_1 = (RuleCall)cVariableCalculationAttributeCrossReference_0_1_0.eContents().get(1);
		private final Assignment cValorAssignment_1 = (Assignment)cAlternatives.eContents().get(1);
		private final RuleCall cValorNumberParserRuleCall_1_0 = (RuleCall)cValorAssignment_1.eContents().get(0);
		
		//TerminalValue:
		//	{TerminalValue} variable=[CalculationAttribute] | valor=Number;
		@Override public ParserRule getRule() { return rule; }
		
		//{TerminalValue} variable=[CalculationAttribute] | valor=Number
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//{TerminalValue} variable=[CalculationAttribute]
		public Group getGroup_0() { return cGroup_0; }
		
		//{TerminalValue}
		public Action getTerminalValueAction_0_0() { return cTerminalValueAction_0_0; }
		
		//variable=[CalculationAttribute]
		public Assignment getVariableAssignment_0_1() { return cVariableAssignment_0_1; }
		
		//[CalculationAttribute]
		public CrossReference getVariableCalculationAttributeCrossReference_0_1_0() { return cVariableCalculationAttributeCrossReference_0_1_0; }
		
		//ID
		public RuleCall getVariableCalculationAttributeIDTerminalRuleCall_0_1_0_1() { return cVariableCalculationAttributeIDTerminalRuleCall_0_1_0_1; }
		
		//valor=Number
		public Assignment getValorAssignment_1() { return cValorAssignment_1; }
		
		//Number
		public RuleCall getValorNumberParserRuleCall_1_0() { return cValorNumberParserRuleCall_1_0; }
	}
	public class MathADDElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "co.edu.uniandes.Pagos.mathADD");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cMathADDAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cOperadorAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOperadorADDOPTerminalRuleCall_1_0 = (RuleCall)cOperadorAssignment_1.eContents().get(0);
		
		//mathADD:
		//	{mathADD} operador=ADDOP;
		@Override public ParserRule getRule() { return rule; }
		
		//{mathADD} operador=ADDOP
		public Group getGroup() { return cGroup; }
		
		//{mathADD}
		public Action getMathADDAction_0() { return cMathADDAction_0; }
		
		//operador=ADDOP
		public Assignment getOperadorAssignment_1() { return cOperadorAssignment_1; }
		
		//ADDOP
		public RuleCall getOperadorADDOPTerminalRuleCall_1_0() { return cOperadorADDOPTerminalRuleCall_1_0; }
	}
	public class MathMULTElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "co.edu.uniandes.Pagos.mathMULT");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cMathMULTAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cOperadorAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOperadorMULTOPTerminalRuleCall_1_0 = (RuleCall)cOperadorAssignment_1.eContents().get(0);
		
		//mathMULT:
		//	{mathMULT} operador=MULTOP;
		@Override public ParserRule getRule() { return rule; }
		
		//{mathMULT} operador=MULTOP
		public Group getGroup() { return cGroup; }
		
		//{mathMULT}
		public Action getMathMULTAction_0() { return cMathMULTAction_0; }
		
		//operador=MULTOP
		public Assignment getOperadorAssignment_1() { return cOperadorAssignment_1; }
		
		//MULTOP
		public RuleCall getOperadorMULTOPTerminalRuleCall_1_0() { return cOperadorMULTOPTerminalRuleCall_1_0; }
	}
	public class NumberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "co.edu.uniandes.Pagos.Number");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cEDoubleParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cIntegerParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//Number:
		//	EDouble | Integer;
		@Override public ParserRule getRule() { return rule; }
		
		//EDouble | Integer
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//EDouble
		public RuleCall getEDoubleParserRuleCall_0() { return cEDoubleParserRuleCall_0; }
		
		//Integer
		public RuleCall getIntegerParserRuleCall_1() { return cIntegerParserRuleCall_1; }
	}
	public class EDoubleElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "co.edu.uniandes.Pagos.EDouble");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cINTTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cFullStopKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cINTTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Alternatives cAlternatives_3_0 = (Alternatives)cGroup_3.eContents().get(0);
		private final Keyword cEKeyword_3_0_0 = (Keyword)cAlternatives_3_0.eContents().get(0);
		private final Keyword cEKeyword_3_0_1 = (Keyword)cAlternatives_3_0.eContents().get(1);
		private final RuleCall cINTTerminalRuleCall_3_1 = (RuleCall)cGroup_3.eContents().get(1);
		
		//EDouble ecore::EDouble:
		//	INT? '.' INT (('E' | 'e') INT)?
		@Override public ParserRule getRule() { return rule; }
		
		//INT? '.' INT (('E' | 'e') INT)?
		public Group getGroup() { return cGroup; }
		
		//INT?
		public RuleCall getINTTerminalRuleCall_0() { return cINTTerminalRuleCall_0; }
		
		//'.'
		public Keyword getFullStopKeyword_1() { return cFullStopKeyword_1; }
		
		//INT
		public RuleCall getINTTerminalRuleCall_2() { return cINTTerminalRuleCall_2; }
		
		//(('E' | 'e') INT)?
		public Group getGroup_3() { return cGroup_3; }
		
		//('E' | 'e')
		public Alternatives getAlternatives_3_0() { return cAlternatives_3_0; }
		
		//'E'
		public Keyword getEKeyword_3_0_0() { return cEKeyword_3_0_0; }
		
		//'e'
		public Keyword getEKeyword_3_0_1() { return cEKeyword_3_0_1; }
		
		//INT
		public RuleCall getINTTerminalRuleCall_3_1() { return cINTTerminalRuleCall_3_1; }
	}
	public class IntegerElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "co.edu.uniandes.Pagos.Integer");
		private final RuleCall cINTTerminalRuleCall = (RuleCall)rule.eContents().get(1);
		
		//Integer ecore::EInt:
		//	INT
		@Override public ParserRule getRule() { return rule; }
		
		//INT
		public RuleCall getINTTerminalRuleCall() { return cINTTerminalRuleCall; }
	}
	public class EStringElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "co.edu.uniandes.Pagos.EString");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cSTRINGTerminalRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//EString:
		//	STRING | ID;
		@Override public ParserRule getRule() { return rule; }
		
		//STRING | ID
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//STRING
		public RuleCall getSTRINGTerminalRuleCall_0() { return cSTRINGTerminalRuleCall_0; }
		
		//ID
		public RuleCall getIDTerminalRuleCall_1() { return cIDTerminalRuleCall_1; }
	}
	
	
	private final ApplicationElements pApplication;
	private final IntermediaryElements pIntermediary;
	private final SuperEntityElements pSuperEntity;
	private final ParticipantElements pParticipant;
	private final ProviderElements pProvider;
	private final InformationTemplateElements pInformationTemplate;
	private final CalculationTemplateElements pCalculationTemplate;
	private final FormulaElements pFormula;
	private final ExpresionLogicaElements pExpresionLogica;
	private final AdicionElements pAdicion;
	private final MultiplicacionElements pMultiplicacion;
	private final SigleExpElements pSigleExp;
	private final SuperEntityAttributeElements pSuperEntityAttribute;
	private final EntityAttributeElements pEntityAttribute;
	private final FormAttributeElements pFormAttribute;
	private final VariableAttributeElements pVariableAttribute;
	private final CalculationAttributeElements pCalculationAttribute;
	private final TerminalValueElements pTerminalValue;
	private final MathADDElements pMathADD;
	private final MathMULTElements pMathMULT;
	private final NumberElements pNumber;
	private final EDoubleElements pEDouble;
	private final IntegerElements pInteger;
	private final EStringElements pEString;
	private final TerminalRule tTYPE;
	private final TerminalRule tMULTOP;
	private final TerminalRule tADDOP;
	private final TerminalRule tLOGICALCONN;
	private final TerminalRule tID;
	private final TerminalRule tOPERADORLOGICO;
	private final TerminalRule tLBRACE;
	private final TerminalRule tRBRACE;
	private final TerminalRule tLBRACKET;
	private final TerminalRule tRBRACKET;
	private final TerminalRule tCOMMA;
	private final TerminalRule tCOLON;
	private final TerminalRule tDASH;
	private final TerminalRule tSTRING;
	private final TerminalRule tSTR_ESC;
	
	private final Grammar grammar;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public PagosGrammarAccess(GrammarProvider grammarProvider,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pApplication = new ApplicationElements();
		this.pIntermediary = new IntermediaryElements();
		this.pSuperEntity = new SuperEntityElements();
		this.pParticipant = new ParticipantElements();
		this.pProvider = new ProviderElements();
		this.pInformationTemplate = new InformationTemplateElements();
		this.pCalculationTemplate = new CalculationTemplateElements();
		this.pFormula = new FormulaElements();
		this.pExpresionLogica = new ExpresionLogicaElements();
		this.pAdicion = new AdicionElements();
		this.pMultiplicacion = new MultiplicacionElements();
		this.pSigleExp = new SigleExpElements();
		this.pSuperEntityAttribute = new SuperEntityAttributeElements();
		this.pEntityAttribute = new EntityAttributeElements();
		this.pFormAttribute = new FormAttributeElements();
		this.pVariableAttribute = new VariableAttributeElements();
		this.pCalculationAttribute = new CalculationAttributeElements();
		this.pTerminalValue = new TerminalValueElements();
		this.pMathADD = new MathADDElements();
		this.pMathMULT = new MathMULTElements();
		this.pNumber = new NumberElements();
		this.pEDouble = new EDoubleElements();
		this.pInteger = new IntegerElements();
		this.pEString = new EStringElements();
		this.tTYPE = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "co.edu.uniandes.Pagos.TYPE");
		this.tMULTOP = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "co.edu.uniandes.Pagos.MULTOP");
		this.tADDOP = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "co.edu.uniandes.Pagos.ADDOP");
		this.tLOGICALCONN = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "co.edu.uniandes.Pagos.LOGICALCONN");
		this.tID = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "co.edu.uniandes.Pagos.ID");
		this.tOPERADORLOGICO = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "co.edu.uniandes.Pagos.OPERADORLOGICO");
		this.tLBRACE = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "co.edu.uniandes.Pagos.LBRACE");
		this.tRBRACE = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "co.edu.uniandes.Pagos.RBRACE");
		this.tLBRACKET = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "co.edu.uniandes.Pagos.LBRACKET");
		this.tRBRACKET = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "co.edu.uniandes.Pagos.RBRACKET");
		this.tCOMMA = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "co.edu.uniandes.Pagos.COMMA");
		this.tCOLON = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "co.edu.uniandes.Pagos.COLON");
		this.tDASH = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "co.edu.uniandes.Pagos.DASH");
		this.tSTRING = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "co.edu.uniandes.Pagos.STRING");
		this.tSTR_ESC = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "co.edu.uniandes.Pagos.STR_ESC");
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("co.edu.uniandes.Pagos".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//Application:
	//	LBRACE
	//	'name' COLON name=ID
	//	COMMA
	//	'intermediary' COLON intermediary=Intermediary
	//	RBRACE;
	public ApplicationElements getApplicationAccess() {
		return pApplication;
	}
	
	public ParserRule getApplicationRule() {
		return getApplicationAccess().getRule();
	}
	
	//Intermediary:
	//	{Intermediary} LBRACE
	//	'name' COLON name=ID
	//	COMMA
	//	'superentities' COLON LBRACKET superentitie+=SuperEntity (COMMA superentitie+=SuperEntity)* RBRACKET
	//	RBRACE;
	public IntermediaryElements getIntermediaryAccess() {
		return pIntermediary;
	}
	
	public ParserRule getIntermediaryRule() {
		return getIntermediaryAccess().getRule();
	}
	
	//SuperEntity:
	//	{SuperEntity} LBRACE
	//	'name' COLON name=ID
	//	COMMA
	//	'description' COLON description=STRING
	//	COMMA
	//	'attributes' COLON
	//	LBRACKET attLists+=SuperEntityAttribute (COMMA attLists+=SuperEntityAttribute)* RBRACKET
	//	COMMA
	//	'entities' COLON LBRACKET participante+=Participant (COMMA participante+=Participant)* RBRACKET
	//	RBRACE;
	public SuperEntityElements getSuperEntityAccess() {
		return pSuperEntity;
	}
	
	public ParserRule getSuperEntityRule() {
		return getSuperEntityAccess().getRule();
	}
	
	//Participant:
	//	{Participant} LBRACE
	//	'name' COLON name=ID
	//	COMMA
	//	'description' COLON description=STRING
	//	COMMA
	//	'attributes' COLON
	//	LBRACKET attLists+=EntityAttribute (COMMA attLists+=EntityAttribute)* RBRACKET
	//	RBRACE (COMMA
	//	'InformationTemplate' COLON LBRACKET templatesForm+=InformationTemplate (COMMA templatesForm+=InformationTemplate)*)?
	//	RBRACKET;
	public ParticipantElements getParticipantAccess() {
		return pParticipant;
	}
	
	public ParserRule getParticipantRule() {
		return getParticipantAccess().getRule();
	}
	
	//Provider:
	//	{Provider} LBRACE
	//	'name' COLON name=ID
	//	COMMA
	//	'description' COLON description=STRING
	//	COMMA
	//	'attributes' COLON
	//	LBRACKET attLists+=SuperEntityAttribute (COMMA attLists+=SuperEntityAttribute)* RBRACKET
	//	RBRACE;
	public ProviderElements getProviderAccess() {
		return pProvider;
	}
	
	public ParserRule getProviderRule() {
		return getProviderAccess().getRule();
	}
	
	//InformationTemplate:
	//	{InformationTemplate} LBRACE
	//	'name' COLON name=ID
	//	COMMA
	//	'description' COLON description=STRING
	//	COMMA
	//	'FormAttributes' COLON
	//	LBRACKET formLists+=FormAttribute (COMMA formLists+=FormAttribute)* RBRACKET
	//	RBRACE (COMMA
	//	'calculationtemplates' COLON LBRACKET templates+=CalculationTemplate (COMMA templates+=CalculationTemplate)*
	//	RBRACKET)? (COMMA 'providers' COLON LBRACKET providers+=Provider (COMMA providers+=Provider)* RBRACKET)?;
	public InformationTemplateElements getInformationTemplateAccess() {
		return pInformationTemplate;
	}
	
	public ParserRule getInformationTemplateRule() {
		return getInformationTemplateAccess().getRule();
	}
	
	//CalculationTemplate:
	//	{CalculationTemplate} LBRACE
	//	'name' COLON name=ID
	//	COMMA
	//	'description' COLON description=STRING
	//	COMMA
	//	'calculationattributes' COLON
	//	LBRACKET attLists+=VariableAttribute (COMMA attLists+=VariableAttribute)* RBRACKET
	//	COMMA
	//	'calculationrules' COLON formula+=Formula
	//	RBRACE;
	public CalculationTemplateElements getCalculationTemplateAccess() {
		return pCalculationTemplate;
	}
	
	public ParserRule getCalculationTemplateRule() {
		return getCalculationTemplateAccess().getRule();
	}
	
	//Formula:
	//	{Formula}
	//	'Si' LBRACKET
	//	logExp+=ExpresionLogica
	//	RBRACKET
	//	'Entonces'
	//	LBRACE
	//	'Retornar:' expression+=Adicion
	//	RBRACE ('Sino'? ('Si'
	//	LBRACKET
	//	logExp+=ExpresionLogica
	//	RBRACKET
	//	'Entonces')?
	//	LBRACE
	//	'Retornar:' expression+=Adicion
	//	RBRACE)*;
	public FormulaElements getFormulaAccess() {
		return pFormula;
	}
	
	public ParserRule getFormulaRule() {
		return getFormulaAccess().getRule();
	}
	
	//ExpresionLogica:
	//	variable+=TerminalValue (logOper+=OPERADORLOGICO (variable2+=TerminalValue | literal+=STRING))+ (LOGICALCONN
	//	exp+=ExpresionLogica)?;
	public ExpresionLogicaElements getExpresionLogicaAccess() {
		return pExpresionLogica;
	}
	
	public ParserRule getExpresionLogicaRule() {
		return getExpresionLogicaAccess().getRule();
	}
	
	//Adicion Expression:
	//	Multiplicacion ({Adicion.left=current} operator=mathADD rexp=Multiplicacion)*
	public AdicionElements getAdicionAccess() {
		return pAdicion;
	}
	
	public ParserRule getAdicionRule() {
		return getAdicionAccess().getRule();
	}
	
	//Multiplicacion Expression:
	//	SigleExp ({Multiplicacion.left=current} operator=mathMULT rexp=SigleExp)*
	public MultiplicacionElements getMultiplicacionAccess() {
		return pMultiplicacion;
	}
	
	public ParserRule getMultiplicacionRule() {
		return getMultiplicacionAccess().getRule();
	}
	
	//SigleExp Expression:
	//	TerminalValue | '(' Adicion ')'
	public SigleExpElements getSigleExpAccess() {
		return pSigleExp;
	}
	
	public ParserRule getSigleExpRule() {
		return getSigleExpAccess().getRule();
	}
	
	//SuperEntityAttribute:
	//	{SuperEntityAttribute} LBRACE
	//	name=ID COLON type=TYPE (':=' Number)?
	//	RBRACE;
	public SuperEntityAttributeElements getSuperEntityAttributeAccess() {
		return pSuperEntityAttribute;
	}
	
	public ParserRule getSuperEntityAttributeRule() {
		return getSuperEntityAttributeAccess().getRule();
	}
	
	//EntityAttribute:
	//	{EntityAttribute} LBRACE
	//	name=ID COLON type=TYPE (':=' Number)?
	//	RBRACE;
	public EntityAttributeElements getEntityAttributeAccess() {
		return pEntityAttribute;
	}
	
	public ParserRule getEntityAttributeRule() {
		return getEntityAttributeAccess().getRule();
	}
	
	//FormAttribute:
	//	{FormAttribute} LBRACE
	//	name=ID COLON type=TYPE (':=' exp=Adicion)?
	//	RBRACE;
	public FormAttributeElements getFormAttributeAccess() {
		return pFormAttribute;
	}
	
	public ParserRule getFormAttributeRule() {
		return getFormAttributeAccess().getRule();
	}
	
	//VariableAttribute:
	//	{VariableAttribute} LBRACE
	//	name=ID COLON type=TYPE (':=' exp=Adicion)?
	//	RBRACE;
	public VariableAttributeElements getVariableAttributeAccess() {
		return pVariableAttribute;
	}
	
	public ParserRule getVariableAttributeRule() {
		return getVariableAttributeAccess().getRule();
	}
	
	//CalculationAttribute:
	//	VariableAttribute | EntityAttribute | FormAttribute | SuperEntityAttribute;
	public CalculationAttributeElements getCalculationAttributeAccess() {
		return pCalculationAttribute;
	}
	
	public ParserRule getCalculationAttributeRule() {
		return getCalculationAttributeAccess().getRule();
	}
	
	//TerminalValue:
	//	{TerminalValue} variable=[CalculationAttribute] | valor=Number;
	public TerminalValueElements getTerminalValueAccess() {
		return pTerminalValue;
	}
	
	public ParserRule getTerminalValueRule() {
		return getTerminalValueAccess().getRule();
	}
	
	//mathADD:
	//	{mathADD} operador=ADDOP;
	public MathADDElements getMathADDAccess() {
		return pMathADD;
	}
	
	public ParserRule getMathADDRule() {
		return getMathADDAccess().getRule();
	}
	
	//mathMULT:
	//	{mathMULT} operador=MULTOP;
	public MathMULTElements getMathMULTAccess() {
		return pMathMULT;
	}
	
	public ParserRule getMathMULTRule() {
		return getMathMULTAccess().getRule();
	}
	
	//Number:
	//	EDouble | Integer;
	public NumberElements getNumberAccess() {
		return pNumber;
	}
	
	public ParserRule getNumberRule() {
		return getNumberAccess().getRule();
	}
	
	//EDouble ecore::EDouble:
	//	INT? '.' INT (('E' | 'e') INT)?
	public EDoubleElements getEDoubleAccess() {
		return pEDouble;
	}
	
	public ParserRule getEDoubleRule() {
		return getEDoubleAccess().getRule();
	}
	
	//Integer ecore::EInt:
	//	INT
	public IntegerElements getIntegerAccess() {
		return pInteger;
	}
	
	public ParserRule getIntegerRule() {
		return getIntegerAccess().getRule();
	}
	
	//EString:
	//	STRING | ID;
	public EStringElements getEStringAccess() {
		return pEString;
	}
	
	public ParserRule getEStringRule() {
		return getEStringAccess().getRule();
	}
	
	//terminal TYPE:
	//	'String' | 'Integer' | 'Date' | 'Double';
	public TerminalRule getTYPERule() {
		return tTYPE;
	}
	
	//terminal MULTOP:
	//	'*' | '/';
	public TerminalRule getMULTOPRule() {
		return tMULTOP;
	}
	
	//terminal ADDOP:
	//	'+' | '-';
	public TerminalRule getADDOPRule() {
		return tADDOP;
	}
	
	//terminal LOGICALCONN:
	//	'&&' | '||';
	public TerminalRule getLOGICALCONNRule() {
		return tLOGICALCONN;
	}
	
	//terminal ID:
	//	('a'..'z' | 'A'..'Z' | '_') ('a'..'z' | 'A'..'Z' | '_' | '0'..'9')* ('.' ('Ultima' | 'Primera' | 'Tamano'))*;
	public TerminalRule getIDRule() {
		return tID;
	}
	
	//terminal OPERADORLOGICO:
	//	'<' | '>' | '<=' | '>=' | '=' | '<>';
	public TerminalRule getOPERADORLOGICORule() {
		return tOPERADORLOGICO;
	}
	
	//terminal LBRACE:
	//	"{";
	public TerminalRule getLBRACERule() {
		return tLBRACE;
	}
	
	//terminal RBRACE:
	//	"}";
	public TerminalRule getRBRACERule() {
		return tRBRACE;
	}
	
	//terminal LBRACKET:
	//	"[";
	public TerminalRule getLBRACKETRule() {
		return tLBRACKET;
	}
	
	//terminal RBRACKET:
	//	"]";
	public TerminalRule getRBRACKETRule() {
		return tRBRACKET;
	}
	
	//terminal COMMA:
	//	",";
	public TerminalRule getCOMMARule() {
		return tCOMMA;
	}
	
	//terminal COLON:
	//	':';
	public TerminalRule getCOLONRule() {
		return tCOLON;
	}
	
	//terminal DASH:
	//	"#";
	public TerminalRule getDASHRule() {
		return tDASH;
	}
	
	//terminal STRING:
	//	'"' (STR_ESC | !('"' | '\r' | '\n' | '\\'))* '"';
	public TerminalRule getSTRINGRule() {
		return tSTRING;
	}
	
	//terminal STR_ESC:
	//	'\\' ('b' | 't' | 'n' | 'f' | 'r' | '"' | '\\' | '$');
	public TerminalRule getSTR_ESCRule() {
		return tSTR_ESC;
	}
	
	//terminal INT returns ecore::EInt:
	//	'0'..'9'+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	}
	
	//terminal ML_COMMENT:
	//	'/ *'->'* /';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	}
	
	//terminal SL_COMMENT:
	//	'//' !('\n' | '\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	}
	
	//terminal WS:
	//	' ' | '\t' | '\r' | '\n'+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	}
	
	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}
